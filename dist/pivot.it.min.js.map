{"version":3,"sources":["/source/pivot.it.coffee","pivot.it.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","$","frFmt","frFmtInt","frFmtPct","nf","tpl","pivotUtilities","numberFormat","aggregatorTemplates","thousandsSep","decimalSep","digitsAfterDecimal","scaler","suffix","locales","fr","localeStrings","renderError","computeError","uiRenderError","selectAll","selectNone","tooMany","filterResults","totals","vs","by","aggregators","Numero","count","Numero di valori unici","countUnique","Elenco di valori unici","listUnique","Somma","sum","Somma intera","Media","average","Minimo","min","Massimo","max","Rapporto","sumOverSum","Limite superiore 80%","sumOverSumBound80","limite inferiore 80%","Somma proporzionale al totale","fractionOf","Somma proporzionale alla riga","Somma proporzionale alla colonna","Numero proporzionale al totale","Numero proporzionale alla riga","Numero proporzionale alla colonna","renderers","Tabella","Tabella con grafico","Mappa di calore","Mappa di calore per righe","Mappa di calore per colonne","call","this"],"mappings":"CAAA,WAAA,GAAAA,IAAAA,EAAiB,SAACC,GAChB,MAAqB,gBAAXC,UAAyC,gBAAVC,QACvCF,EAAYG,QAAQ,WACG,kBAAVC,SAAyBA,OAAOC,IAC7CD,QAAQ,UAAWJ,GAGnBA,EAAYM,UAED,SAACC,GACd,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,CCuBE,ODvBFD,GAAKJ,EAAEM,eAAeC,aACtBF,EAAML,EAAEM,eAAeE,oBAEvBP,EAAWG,GAAGK,aAAc,IAAKC,WAAY,MAC7CR,EAAWE,GAAGO,mBAAoB,EAAGF,aAAc,IAAKC,WAAY,MACpEP,EAAWC,GAAGO,mBAAoB,EAAGC,OAAQ,IAAKC,OAAQ,IAAKJ,aAAc,IAAKC,WAAY,MAE9FV,EAAEM,eAAeQ,QAAQC,IACvBC,eACEC,YAAa,gEACbC,aAAc,sDACdC,cAAe,mFACfC,UAAW,kBACXC,WAAY,oBACZC,QAAS,kCACTC,cAAe,kBACfC,OAAQ,SACRC,GAAI,KACJC,GAAI,MAENC,aACEC,OAAsCvB,EAAIwB,MAAM3B,GAChD4B,yBAAsCzB,EAAI0B,YAAY7B,GACtD8B,yBAAsC3B,EAAI4B,WAAW,MACrDC,MAAsC7B,EAAI8B,IAAIlC,GAC9CmC,eAAsC/B,EAAI8B,IAAIjC,GAC9CmC,MAAsChC,EAAIiC,QAAQrC,GAClDsC,OAAsClC,EAAImC,IAAIvC,GAC9CwC,QAAsCpC,EAAIqC,IAAIzC,GAC9C0C,SAAsCtC,EAAIuC,WAAW3C,GACrD4C,uBAAsCxC,EAAIyC,mBAAkB,EAAM7C,GAClE8C,uBAAsC1C,EAAIyC,mBAAkB,EAAO7C,GACnE+C,gCAAsC3C,EAAI4C,WAAW5C,EAAI8B,MAAS,QAAShC,GAC3E+C,gCAAsC7C,EAAI4C,WAAW5C,EAAI8B,MAAS,MAAShC,GAC3EgD,mCAAsC9C,EAAI4C,WAAW5C,EAAI8B,MAAS,MAAShC,GAC3EiD,iCAAsC/C,EAAI4C,WAAW5C,EAAIwB,QAAS,QAAS1B,GAC3EkD,iCAAsChD,EAAI4C,WAAW5C,EAAIwB,QAAS,MAAS1B,GAC3EmD,oCAAsCjD,EAAI4C,WAAW5C,EAAIwB,QAAS,MAAS1B,IAE7EoD,WACEC,QAAqCxD,EAAEM,eAAeiD,UAAU,MAChEE,sBAAqCzD,EAAEM,eAAeiD,UAAU,kBAChEG,kBAAqC1D,EAAEM,eAAeiD,UAAU,QAChEI,4BAAqC3D,EAAEM,eAAeiD,UAAU,eAChEK,8BAAqC5D,EAAEM,eAAeiD,UAAU,qBCqBnEM,KAAKC","file":"pivot.it.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n  if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n    pivotModule require(\"jquery\")\r\n  else if typeof define is \"function\" and define.amd # AMD\r\n    define [\"jquery\"], pivotModule\r\n# Plain browser env\r\n  else\r\n    pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n  nf = $.pivotUtilities.numberFormat\r\n  tpl = $.pivotUtilities.aggregatorTemplates\r\n\r\n  frFmt =    nf(thousandsSep: \" \", decimalSep: \",\")\r\n  frFmtInt = nf(digitsAfterDecimal: 0, thousandsSep: \" \", decimalSep: \",\")\r\n  frFmtPct = nf(digitsAfterDecimal: 1, scaler: 100, suffix: \"%\", thousandsSep: \" \", decimalSep: \",\")\r\n\r\n  $.pivotUtilities.locales.fr =\r\n    localeStrings:\r\n      renderError: \"Si è verificato un errore durante la creazione della tabella.\"\r\n      computeError: \"Si è verificato un errore di calcolo nella tabella.\"\r\n      uiRenderError: \"Si è verificato un errore durante il disegno di interfaccia della tabella pivot.\"\r\n      selectAll: \"Seleziona tutto\"\r\n      selectNone: \"Deseleziona tutto\"\r\n      tooMany: \"(troppi valori da visualizzare)\"\r\n      filterResults: \"Filtra i valori\"\r\n      totals: \"Totali\"\r\n      vs: \"su\"\r\n      by: \"da\"\r\n\r\n    aggregators:\r\n      \"Numero\":                             tpl.count(frFmtInt)\r\n      \"Numero di valori unici\":             tpl.countUnique(frFmtInt)\r\n      \"Elenco di valori unici\":             tpl.listUnique(\", \")\r\n      \"Somma\":                              tpl.sum(frFmt)\r\n      \"Somma intera\":                       tpl.sum(frFmtInt)\r\n      \"Media\":                              tpl.average(frFmt)\r\n      \"Minimo\":                             tpl.min(frFmt)\r\n      \"Massimo\":                            tpl.max(frFmt)\r\n      \"Rapporto\":                           tpl.sumOverSum(frFmt)\r\n      \"Limite superiore 80%\":               tpl.sumOverSumBound80(true, frFmt)\r\n      \"limite inferiore 80%\":               tpl.sumOverSumBound80(false, frFmt)\r\n      \"Somma proporzionale al totale\":      tpl.fractionOf(tpl.sum(),   \"total\", frFmtPct)\r\n      \"Somma proporzionale alla riga\":      tpl.fractionOf(tpl.sum(),   \"row\",   frFmtPct)\r\n      \"Somma proporzionale alla colonna\":   tpl.fractionOf(tpl.sum(),   \"col\",   frFmtPct)\r\n      \"Numero proporzionale al totale\":     tpl.fractionOf(tpl.count(), \"total\", frFmtPct)\r\n      \"Numero proporzionale alla riga\":     tpl.fractionOf(tpl.count(), \"row\",   frFmtPct)\r\n      \"Numero proporzionale alla colonna\":  tpl.fractionOf(tpl.count(), \"col\",   frFmtPct)\r\n\r\n    renderers:\r\n      \"Tabella\":                           $.pivotUtilities.renderers[\"Table\"]\r\n      \"Tabella con grafico\":               $.pivotUtilities.renderers[\"Table Barchart\"]\r\n      \"Mappa di calore\":                   $.pivotUtilities.renderers[\"Heatmap\"]\r\n      \"Mappa di calore per righe\":         $.pivotUtilities.renderers[\"Row Heatmap\"]\r\n      \"Mappa di calore per colonne\":       $.pivotUtilities.renderers[\"Col Heatmap\"]\r\n\r\n\r\n","(function() {\n  var callWithJQuery;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var frFmt, frFmtInt, frFmtPct, nf, tpl;\n    nf = $.pivotUtilities.numberFormat;\n    tpl = $.pivotUtilities.aggregatorTemplates;\n    frFmt = nf({\n      thousandsSep: \" \",\n      decimalSep: \",\"\n    });\n    frFmtInt = nf({\n      digitsAfterDecimal: 0,\n      thousandsSep: \" \",\n      decimalSep: \",\"\n    });\n    frFmtPct = nf({\n      digitsAfterDecimal: 1,\n      scaler: 100,\n      suffix: \"%\",\n      thousandsSep: \" \",\n      decimalSep: \",\"\n    });\n    return $.pivotUtilities.locales.fr = {\n      localeStrings: {\n        renderError: \"Si è verificato un errore durante la creazione della tabella.\",\n        computeError: \"Si è verificato un errore di calcolo nella tabella.\",\n        uiRenderError: \"Si è verificato un errore durante il disegno di interfaccia della tabella pivot.\",\n        selectAll: \"Seleziona tutto\",\n        selectNone: \"Deseleziona tutto\",\n        tooMany: \"(troppi valori da visualizzare)\",\n        filterResults: \"Filtra i valori\",\n        totals: \"Totali\",\n        vs: \"su\",\n        by: \"da\"\n      },\n      aggregators: {\n        \"Numero\": tpl.count(frFmtInt),\n        \"Numero di valori unici\": tpl.countUnique(frFmtInt),\n        \"Elenco di valori unici\": tpl.listUnique(\", \"),\n        \"Somma\": tpl.sum(frFmt),\n        \"Somma intera\": tpl.sum(frFmtInt),\n        \"Media\": tpl.average(frFmt),\n        \"Minimo\": tpl.min(frFmt),\n        \"Massimo\": tpl.max(frFmt),\n        \"Rapporto\": tpl.sumOverSum(frFmt),\n        \"Limite superiore 80%\": tpl.sumOverSumBound80(true, frFmt),\n        \"limite inferiore 80%\": tpl.sumOverSumBound80(false, frFmt),\n        \"Somma proporzionale al totale\": tpl.fractionOf(tpl.sum(), \"total\", frFmtPct),\n        \"Somma proporzionale alla riga\": tpl.fractionOf(tpl.sum(), \"row\", frFmtPct),\n        \"Somma proporzionale alla colonna\": tpl.fractionOf(tpl.sum(), \"col\", frFmtPct),\n        \"Numero proporzionale al totale\": tpl.fractionOf(tpl.count(), \"total\", frFmtPct),\n        \"Numero proporzionale alla riga\": tpl.fractionOf(tpl.count(), \"row\", frFmtPct),\n        \"Numero proporzionale alla colonna\": tpl.fractionOf(tpl.count(), \"col\", frFmtPct)\n      },\n      renderers: {\n        \"Tabella\": $.pivotUtilities.renderers[\"Table\"],\n        \"Tabella con grafico\": $.pivotUtilities.renderers[\"Table Barchart\"],\n        \"Mappa di calore\": $.pivotUtilities.renderers[\"Heatmap\"],\n        \"Mappa di calore per righe\": $.pivotUtilities.renderers[\"Row Heatmap\"],\n        \"Mappa di calore per colonne\": $.pivotUtilities.renderers[\"Col Heatmap\"]\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=pivot.it.js.map\n"],"sourceRoot":"/source/"}