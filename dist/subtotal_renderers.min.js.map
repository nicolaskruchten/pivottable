{"version":3,"sources":["/source/subtotal_renderers.coffee","subtotal_renderers.min.js"],"names":["callWithJQuery","hasProp","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalRenderer","pivotData","opts","allTotal","buildColHeaderHeaders","buildColHeaders","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeaderHeaders","buildRowHeaders","buildRowTotalsHeader","buildValues","colAttrs","colKeys","colTotals","collapseRow","collapseRowsAt","createCell","defaults","expandRow","main","minus","plus","processKeys","rowAttrs","rowKeys","rowTotals","toggleRow","tree","localeStrings","totals","extend","getRowKeys","getColKeys","cellType","className","textContent","attributes","attr","th","val","document","createElement","call","setAttribute","keysArr","c","flatKey","header","headers","lastCol","lastRow","node","nodePos","r","rMark","repeats","x","length","row","col","parent","children","descendants","leaves","String","fromCharCode","push","result","colHeaderRowsArr","j","ref","results","tr","appendChild","colspan","rowspan","colHeaderColsArr","colHeader","h","len","rowHeaderHeaders","rowAttr","rowHeaderRowsArr","rowHeader","onclick","event","window","parseInt","target","getAttribute","clickStatus","aggregator","flatColKey","flatRowKey","k","len1","style","td","totalAggregator","value","format","data-value","data-row","data-col","data-for","rowHeaderRows","d","i","p","str","substr","display","ref1","nRows","colHeaderCols","colHeaderRows","colHeaders","idx","rowHeaders","sTime","Date","now","indexOf","pivotUtilities","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","this"],"mappings":"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","file":"subtotal_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n        \r\ncallWithJQuery ($) ->\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                totals: \"Totals\"\r\n\r\n        opts = $.extend defaults, opts\r\n\r\n        plus = \"\\u25B6\"\r\n        minus = \"\\u25E2\"\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal =pivotData.allTotal\r\n        \r\n        createCell = (cellType, className, textContent, attributes) ->\r\n            th = document.createElement(cellType)\r\n            if className then th.className = className\r\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\r\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\r\n            return th\r\n\r\n        processKeys = (keysArr, className) ->\r\n            lastRow = keysArr.length - 1\r\n            lastCol = keysArr[0].length - 1\r\n            rMark = []\r\n            headers = []\r\n            th = createCell(\"th\", className, keysArr[0][0])\r\n            flatKey = keysArr[0][0]\r\n            nodePos = 0\r\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"flatKey\": flatKey}\r\n            headers[0] = node \r\n            rMark[0] = node\r\n            c = 1\r\n            while c <= lastCol\r\n                th = createCell(\"th\", className, keysArr[0][c])\r\n                flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c]\r\n                ++nodePos\r\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"flatKey\": flatKey}\r\n                rMark[c] = node\r\n                rMark[c-1].children.push(node)\r\n                ++c\r\n            rMark[lastCol].leaves = 0\r\n            r = 1\r\n            while r <= lastRow\r\n                repeats = true\r\n                flatKey = \"\"\r\n                c = 0\r\n                while c <= lastCol\r\n                    flatKey = if c is 0 then keysArr[r][c] else flatKey + String.fromCharCode(0) + keysArr[r][c]\r\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\r\n                        repeats = true\r\n                        ++c\r\n                        continue\r\n                    th = createCell(\"th\", className, keysArr[r][c])\r\n                    ++nodePos\r\n                    header = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"flatKey\": flatKey}\r\n                    if c is 0\r\n                        headers.push header\r\n                    else\r\n                        header.parent = rMark[c-1]\r\n                        rMark[c-1].children.push header\r\n                        x = 0\r\n                        while x <= c-1\r\n                            rMark[x].descendants = rMark[x].descendants + 1\r\n                            ++x\r\n                    rMark[c] = header\r\n                    repeats = false\r\n                    ++c\r\n                c = 0\r\n                while c <= lastCol\r\n                    rMark[c].leaves = rMark[c].leaves + 1\r\n                    ++c\r\n                rMark[lastCol].leaves = 0\r\n                ++r\r\n            return headers\r\n\r\n        buildColHeaderHeaders = (result, colHeaderRowsArr, rowAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\r\n            tr.appendChild createCell(\"th\", \"pvtAxisLabel\", colAttrs[0])\r\n            colHeaderRowsArr[0] = tr\r\n            result.appendChild(tr)\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = document.createElement(\"tr\")\r\n                th = createCell(\"th\", \"pvtAxisLabel\", colAttrs[c])\r\n                tr.appendChild th\r\n                colHeaderRowsArr[c] = tr\r\n                result.appendChild(tr)\r\n                ++c\r\n\r\n        buildColHeaders = (colHeaderRowsArr, colHeaderColsArr, colHeader, parent, colAttrs, rowAttrs) ->\r\n            # DF Recurse\r\n            for h in colHeader.children\r\n                buildColHeaders(colHeaderRowsArr, colHeaderColsArr, h, colHeader, colAttrs, rowAttrs)\r\n            # Process\r\n            tr = colHeaderRowsArr[colHeader.col]\r\n            th = colHeader.th\r\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n                th.setAttribute(\"rowspan\", 2)\r\n            if colHeader.children.length !=0\r\n                th.setAttribute(\"colspan\", colHeader.descendants)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length !=0\r\n                rowspan = colAttrs.length-colHeader.col + if rowAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtColLabel\", '', {\"rowspan\": rowspan})\r\n                tr.appendChild(th)\r\n            colHeader.tr = tr\r\n            colHeaderColsArr.push(colHeader)\r\n\r\n        buildRowHeaderHeaders = (result, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            for rowAttr in rowAttrs\r\n                th = createCell(\"th\", \"pvtAxisLabel\", rowAttr)\r\n                tr.appendChild th\r\n            if colAttrs.length != 0\r\n                th = createCell(\"th\")\r\n                tr.appendChild th\r\n            result.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowTotalsHeader = (tr, colAttrs, rowAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\r\n            tr.appendChild th\r\n\r\n        buildRowHeaders = (result, rowHeaderRowsArr, rowHeader, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            th = rowHeader.th\r\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\r\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\r\n                th.setAttribute(\"colspan\", 2)\r\n            th.setAttribute(\"data-node\", rowHeaderRowsArr.length)\r\n            tr.appendChild(th)\r\n            if rowHeader.children.length != 0\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRow(rowHeaderRowsArr, parseInt(event.target.getAttribute(\"data-node\")))\r\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtRowLabel\", '', {\"colspan\": colspan})\r\n                tr.appendChild(th)\r\n            rowHeader.clickStatus = \"expanded\"\r\n            rowHeader.th.textContent = \" \" + minus + \" \" + rowHeader.th.textContent\r\n            rowHeader.tr = tr\r\n            rowHeaderRowsArr.push(rowHeader)\r\n            result.appendChild(tr)\r\n            for h in rowHeader.children\r\n                buildRowHeaders(result, rowHeaderRowsArr, h, rowAttrs, colAttrs)\r\n\r\n        buildValues = (rowHeaderRowsArr, colHeaderColsArr) ->\r\n            for rowHeader in rowHeaderRowsArr\r\n                tr = rowHeader.tr\r\n                flatRowKey = rowHeader.flatKey\r\n                for colHeader in colHeaderColsArr\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    style = \"pvtVal\"\r\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtSubtotal\" else style\r\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.col\r\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val})\r\n                    tr.appendChild td\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col})\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\r\n            tr.appendChild(th)\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderColsArr) ->\r\n            for h in colHeaderColsArr\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal colTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col})\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val})\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n       \r\n        collapseRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    str = d.th.textContent\r\n                    d.th.textContent = str.substr(0, 1) + plus + str.substr(1+minus.length);\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    ++rowspan\r\n                    d.tr.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                str = h.th.textContent\r\n                h.th.textContent = str.substr(0, 1) + plus + str.substr(1+plus.length);\r\n            h.clickStatus = \"collapsed\"\r\n            h.th.setAttribute(\"rowspan\", 1)\r\n            h.tr.style.display = \"\"\r\n            \r\n        expandRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            rowspan = 0\r\n            h = rowHeaderRows[r]\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    str = d.th.textContent\r\n                    d.th.textContent = str.substr(0, 1) + plus + str.substr(1+minus.length);\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    --rowspan\r\n                    d.tr.style.display = \"none\"\r\n            for c in h.children\r\n                if c.tr.style.display is \"none\"\r\n                    ++rowspan\r\n                    c.tr.style.display = \"\"\r\n            h.th.setAttribute(\"rowspan\", h.children.length+1)\r\n            if h.descendants != 0\r\n                str = h.th.textContent\r\n                h.th.textContent = str.substr(0, 1) + minus + str.substr(1+minus.length);\r\n            h.clickStatus = \"expanded\"\r\n            h.tr.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\r\n                p = p.parent\r\n\r\n        toggleRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            if rowHeaderRows[r].clickStatus is \"collapsed\"\r\n                expandRow(rowHeaderRows, r)\r\n            else\r\n                collapseRow(rowHeaderRows, r)\r\n\r\n        collapseRowsAt = (rowHeaderRows, col) ->\r\n            i = 0\r\n            nRows = rowHeaderRows.length\r\n            while i < nRows\r\n                h = rowHeaderRows[i]\r\n                if h.col is col\r\n                    collapseRow(rowHeaderRows, h.node)\r\n                    i = i + h.descendants + 1\r\n                else\r\n                    ++i\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaders = []\r\n            colHeaders = []\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderRows = []\r\n            colHeaderCols = []\r\n\r\n            if rowAttrs.length != 0\r\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\r\n            if colAttrs.length != 0\r\n                sTime = Date.now()\r\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\r\n            result = document.createElement(\"table\")\r\n            result.className = \"pvtTable\"\r\n            if colAttrs.length != 0\r\n                buildColHeaderHeaders(result, colHeaderRows, rowAttrs)\r\n                for h in colHeaders\r\n                    buildColHeaders(colHeaderRows, colHeaderCols, h, null, colAttrs, rowAttrs)\r\n            if rowAttrs.length != 0\r\n                buildRowHeaderHeaders(result, rowHeaderHeaders, rowAttrs, colAttrs)\r\n                if colAttrs.length == 0\r\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, colAttrs, rowAttrs)\r\n            if colAttrs.length != 0\r\n                sTime = Date.now()\r\n                buildRowTotalsHeader(colHeaderRows[0], colAttrs, rowAttrs)\r\n            if rowAttrs.length != 0\r\n                for h in rowHeaders\r\n                    buildRowHeaders result, rowHeaderRows, h, rowAttrs, colAttrs\r\n            buildValues(rowHeaderRows, colHeaderCols)\r\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildColTotals(tr, colHeaderCols)\r\n            buildGrandTotal(result, tr)\r\n            result.setAttribute(\"data-numrows\", rowKeys.length)\r\n            result.setAttribute(\"data-numcols\", colKeys.length)\r\n            idx = rowAttrs.indexOf(opts.collapseRowsAt)\r\n            if idx != -1 and idx != rowAttrs.length-1\r\n                collapseRowsAt(rowHeaderRows, idx)\r\n            return result\r\n\r\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\r\n        \r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap()\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\")\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\")\r\n","(function() {\n  var callWithJQuery,\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var SubtotalRenderer;\n    SubtotalRenderer = function(pivotData, opts) {\n      var allTotal, buildColHeaderHeaders, buildColHeaders, buildColTotals, buildColTotalsHeader, buildGrandTotal, buildRowHeaderHeaders, buildRowHeaders, buildRowTotalsHeader, buildValues, colAttrs, colKeys, colTotals, collapseRow, collapseRowsAt, createCell, defaults, expandRow, main, minus, plus, processKeys, rowAttrs, rowKeys, rowTotals, toggleRow, tree;\n      defaults = {\n        localeStrings: {\n          totals: \"Totals\"\n        }\n      };\n      opts = $.extend(defaults, opts);\n      plus = \"\\u25B6\";\n      minus = \"\\u25E2\";\n      colAttrs = pivotData.colAttrs;\n      rowAttrs = pivotData.rowAttrs;\n      rowKeys = pivotData.getRowKeys();\n      colKeys = pivotData.getColKeys();\n      tree = pivotData.tree;\n      rowTotals = pivotData.rowTotals;\n      colTotals = pivotData.colTotals;\n      allTotal = pivotData.allTotal;\n      createCell = function(cellType, className, textContent, attributes) {\n        var attr, th, val;\n        th = document.createElement(cellType);\n        if (className) {\n          th.className = className;\n        }\n        if (textContent !== null && textContent !== void 0) {\n          th.textContent = textContent;\n        }\n        if (attributes) {\n          for (attr in attributes) {\n            if (!hasProp.call(attributes, attr)) continue;\n            val = attributes[attr];\n            th.setAttribute(attr, val);\n          }\n        }\n        return th;\n      };\n      processKeys = function(keysArr, className) {\n        var c, flatKey, header, headers, lastCol, lastRow, node, nodePos, r, rMark, repeats, th, x;\n        lastRow = keysArr.length - 1;\n        lastCol = keysArr[0].length - 1;\n        rMark = [];\n        headers = [];\n        th = createCell(\"th\", className, keysArr[0][0]);\n        flatKey = keysArr[0][0];\n        nodePos = 0;\n        node = {\n          \"node\": nodePos,\n          \"row\": 0,\n          \"col\": 0,\n          \"th\": th,\n          \"parent\": null,\n          \"children\": [],\n          \"descendants\": lastCol,\n          \"leaves\": 1,\n          \"flatKey\": flatKey\n        };\n        headers[0] = node;\n        rMark[0] = node;\n        c = 1;\n        while (c <= lastCol) {\n          th = createCell(\"th\", className, keysArr[0][c]);\n          flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c];\n          ++nodePos;\n          node = {\n            \"node\": nodePos,\n            \"row\": 0,\n            \"col\": c,\n            \"th\": th,\n            \"parent\": rMark[c - 1],\n            \"children\": [],\n            \"descendants\": lastCol - c,\n            \"leaves\": 1,\n            \"flatKey\": flatKey\n          };\n          rMark[c] = node;\n          rMark[c - 1].children.push(node);\n          ++c;\n        }\n        rMark[lastCol].leaves = 0;\n        r = 1;\n        while (r <= lastRow) {\n          repeats = true;\n          flatKey = \"\";\n          c = 0;\n          while (c <= lastCol) {\n            flatKey = c === 0 ? keysArr[r][c] : flatKey + String.fromCharCode(0) + keysArr[r][c];\n            if ((keysArr[r][c] === keysArr[rMark[c].row][c]) && (c !== lastCol) && repeats) {\n              repeats = true;\n              ++c;\n              continue;\n            }\n            th = createCell(\"th\", className, keysArr[r][c]);\n            ++nodePos;\n            header = {\n              \"node\": nodePos,\n              \"row\": r,\n              \"col\": c,\n              \"th\": th,\n              \"parent\": null,\n              \"children\": [],\n              \"descendants\": 0,\n              \"leaves\": 1,\n              \"flatKey\": flatKey\n            };\n            if (c === 0) {\n              headers.push(header);\n            } else {\n              header.parent = rMark[c - 1];\n              rMark[c - 1].children.push(header);\n              x = 0;\n              while (x <= c - 1) {\n                rMark[x].descendants = rMark[x].descendants + 1;\n                ++x;\n              }\n            }\n            rMark[c] = header;\n            repeats = false;\n            ++c;\n          }\n          c = 0;\n          while (c <= lastCol) {\n            rMark[c].leaves = rMark[c].leaves + 1;\n            ++c;\n          }\n          rMark[lastCol].leaves = 0;\n          ++r;\n        }\n        return headers;\n      };\n      buildColHeaderHeaders = function(result, colHeaderRowsArr, rowAttrs) {\n        var c, j, ref, results, th, tr;\n        tr = document.createElement(\"tr\");\n        if (rowAttrs.length !== 0) {\n          tr.appendChild(createCell(\"th\", null, null, {\n            \"colspan\": rowAttrs.length,\n            \"rowspan\": colAttrs.length\n          }));\n        }\n        tr.appendChild(createCell(\"th\", \"pvtAxisLabel\", colAttrs[0]));\n        colHeaderRowsArr[0] = tr;\n        result.appendChild(tr);\n        results = [];\n        for (c = j = 1, ref = colAttrs.length; 1 <= ref ? j <= ref : j >= ref; c = 1 <= ref ? ++j : --j) {\n          if (!(c < colAttrs.length)) {\n            continue;\n          }\n          tr = document.createElement(\"tr\");\n          th = createCell(\"th\", \"pvtAxisLabel\", colAttrs[c]);\n          tr.appendChild(th);\n          colHeaderRowsArr[c] = tr;\n          result.appendChild(tr);\n          results.push(++c);\n        }\n        return results;\n      };\n      buildColHeaders = function(colHeaderRowsArr, colHeaderColsArr, colHeader, parent, colAttrs, rowAttrs) {\n        var h, j, len, ref, rowspan, th, tr;\n        ref = colHeader.children;\n        for (j = 0, len = ref.length; j < len; j++) {\n          h = ref[j];\n          buildColHeaders(colHeaderRowsArr, colHeaderColsArr, h, colHeader, colAttrs, rowAttrs);\n        }\n        tr = colHeaderRowsArr[colHeader.col];\n        th = colHeader.th;\n        if (colHeader.col === colAttrs.length - 1 && rowAttrs.length !== 0) {\n          th.setAttribute(\"rowspan\", 2);\n        }\n        if (colHeader.children.length !== 0) {\n          th.setAttribute(\"colspan\", colHeader.descendants);\n        }\n        tr.appendChild(th);\n        if (colHeader.children.length !== 0) {\n          rowspan = colAttrs.length - colHeader.col + (rowAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtColLabel\", '', {\n            \"rowspan\": rowspan\n          });\n          tr.appendChild(th);\n        }\n        colHeader.tr = tr;\n        return colHeaderColsArr.push(colHeader);\n      };\n      buildRowHeaderHeaders = function(result, rowHeaderHeaders, rowAttrs, colAttrs) {\n        var j, len, rowAttr, th, tr;\n        tr = document.createElement(\"tr\");\n        for (j = 0, len = rowAttrs.length; j < len; j++) {\n          rowAttr = rowAttrs[j];\n          th = createCell(\"th\", \"pvtAxisLabel\", rowAttr);\n          tr.appendChild(th);\n        }\n        if (colAttrs.length !== 0) {\n          th = createCell(\"th\");\n          tr.appendChild(th);\n        }\n        result.appendChild(tr);\n        return rowHeaderHeaders.tr = tr;\n      };\n      buildRowTotalsHeader = function(tr, colAttrs, rowAttrs) {\n        var rowspan, th;\n        rowspan = 1;\n        if (colAttrs.length !== 0) {\n          rowspan = colAttrs.length + (rowAttrs.length === 0 ? 0 : 1);\n        }\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"rowspan\": rowspan\n        });\n        return tr.appendChild(th);\n      };\n      buildRowHeaders = function(result, rowHeaderRowsArr, rowHeader, rowAttrs, colAttrs) {\n        var colspan, h, j, len, ref, results, th, tr;\n        tr = document.createElement(\"tr\");\n        th = rowHeader.th;\n        th.setAttribute(\"rowspan\", rowHeader.descendants + 1);\n        if (rowHeader.col === rowAttrs.length - 1 && colAttrs.length !== 0) {\n          th.setAttribute(\"colspan\", 2);\n        }\n        th.setAttribute(\"data-node\", rowHeaderRowsArr.length);\n        tr.appendChild(th);\n        if (rowHeader.children.length !== 0) {\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRow(rowHeaderRowsArr, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          colspan = rowAttrs.length - (rowHeader.col + 1) + (colAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtRowLabel\", '', {\n            \"colspan\": colspan\n          });\n          tr.appendChild(th);\n        }\n        rowHeader.clickStatus = \"expanded\";\n        rowHeader.th.textContent = \" \" + minus + \" \" + rowHeader.th.textContent;\n        rowHeader.tr = tr;\n        rowHeaderRowsArr.push(rowHeader);\n        result.appendChild(tr);\n        ref = rowHeader.children;\n        results = [];\n        for (j = 0, len = ref.length; j < len; j++) {\n          h = ref[j];\n          results.push(buildRowHeaders(result, rowHeaderRowsArr, h, rowAttrs, colAttrs));\n        }\n        return results;\n      };\n      buildValues = function(rowHeaderRowsArr, colHeaderColsArr) {\n        var aggregator, colHeader, flatColKey, flatRowKey, j, k, len, len1, ref, results, rowHeader, style, td, totalAggregator, tr, val;\n        results = [];\n        for (j = 0, len = rowHeaderRowsArr.length; j < len; j++) {\n          rowHeader = rowHeaderRowsArr[j];\n          tr = rowHeader.tr;\n          flatRowKey = rowHeader.flatKey;\n          for (k = 0, len1 = colHeaderColsArr.length; k < len1; k++) {\n            colHeader = colHeaderColsArr[k];\n            flatColKey = colHeader.flatKey;\n            aggregator = (ref = tree[flatRowKey][flatColKey]) != null ? ref : {\n              value: (function() {\n                return null;\n              }),\n              format: function() {\n                return \"\";\n              }\n            };\n            val = aggregator.value();\n            style = \"pvtVal\";\n            style = colHeader.children.length !== 0 ? style + \" pvtSubtotal\" : style;\n            style = style + \" row\" + rowHeader.row + \" col\" + colHeader.col;\n            td = createCell(\"td\", style, aggregator.format(val), {\n              \"data-value\": val\n            });\n            tr.appendChild(td);\n          }\n          totalAggregator = rowTotals[flatRowKey];\n          val = totalAggregator.value();\n          td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-row\": \"row\" + rowHeader.row,\n            \"data-col\": \"col\" + rowHeader.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildColTotalsHeader = function(rowAttrs, colAttrs) {\n        var colspan, th, tr;\n        tr = document.createElement(\"tr\");\n        colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"colspan\": colspan\n        });\n        tr.appendChild(th);\n        return tr;\n      };\n      buildColTotals = function(tr, colHeaderColsArr) {\n        var h, j, len, results, td, totalAggregator, val;\n        results = [];\n        for (j = 0, len = colHeaderColsArr.length; j < len; j++) {\n          h = colHeaderColsArr[j];\n          totalAggregator = colTotals[h.flatKey];\n          val = totalAggregator.value();\n          td = createCell(\"td\", \"pvtTotal colTotal\", totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-for\": \"col\" + h.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildGrandTotal = function(result, tr) {\n        var td, totalAggregator, val;\n        totalAggregator = allTotal;\n        val = totalAggregator.value();\n        td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\n          \"data-value\": val\n        });\n        tr.appendChild(td);\n        return result.appendChild(tr);\n      };\n      collapseRow = function(rowHeaderRows, r) {\n        var d, h, i, j, p, ref, rowspan, str;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        rowspan = 0;\n        for (i = j = 1, ref = h.descendants; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.descendants !== 0) {\n            str = d.th.textContent;\n            d.th.textContent = str.substr(0, 1) + plus + str.substr(1 + minus.length);\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"rowspan\", 1);\n          if (d.tr.style.display !== \"none\") {\n            ++rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\")) - rowspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          str = h.th.textContent;\n          h.th.textContent = str.substr(0, 1) + plus + str.substr(1 + plus.length);\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"rowspan\", 1);\n        return h.tr.style.display = \"\";\n      };\n      expandRow = function(rowHeaderRows, r) {\n        var c, d, h, i, j, k, len, p, ref, ref1, results, rowspan, str;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        rowspan = 0;\n        h = rowHeaderRows[r];\n        for (i = j = 1, ref = h.descendants; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.descendants !== 0) {\n            str = d.th.textContent;\n            d.th.textContent = str.substr(0, 1) + plus + str.substr(1 + minus.length);\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"rowspan\", 1);\n          if (d.tr.style.display !== \"none\") {\n            --rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        ref1 = h.children;\n        for (k = 0, len = ref1.length; k < len; k++) {\n          c = ref1[k];\n          if (c.tr.style.display === \"none\") {\n            ++rowspan;\n            c.tr.style.display = \"\";\n          }\n        }\n        h.th.setAttribute(\"rowspan\", h.children.length + 1);\n        if (h.descendants !== 0) {\n          str = h.th.textContent;\n          h.th.textContent = str.substr(0, 1) + minus + str.substr(1 + minus.length);\n        }\n        h.clickStatus = \"expanded\";\n        h.tr.style.display = \"\";\n        p = h.parent;\n        results = [];\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", rowspan + parseInt(p.th.getAttribute(\"rowspan\")));\n          results.push(p = p.parent);\n        }\n        return results;\n      };\n      toggleRow = function(rowHeaderRows, r) {\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        if (rowHeaderRows[r].clickStatus === \"collapsed\") {\n          return expandRow(rowHeaderRows, r);\n        } else {\n          return collapseRow(rowHeaderRows, r);\n        }\n      };\n      collapseRowsAt = function(rowHeaderRows, col) {\n        var h, i, nRows, results;\n        i = 0;\n        nRows = rowHeaderRows.length;\n        results = [];\n        while (i < nRows) {\n          h = rowHeaderRows[i];\n          if (h.col === col) {\n            collapseRow(rowHeaderRows, h.node);\n            results.push(i = i + h.descendants + 1);\n          } else {\n            results.push(++i);\n          }\n        }\n        return results;\n      };\n      main = function(rowAttrs, rowKeys, colAttrs, colKeys) {\n        var colHeaderCols, colHeaderRows, colHeaders, h, idx, j, k, len, len1, result, rowHeaderHeaders, rowHeaderRows, rowHeaders, sTime, tr;\n        rowHeaders = [];\n        colHeaders = [];\n        rowHeaderHeaders = {};\n        rowHeaderRows = [];\n        colHeaderRows = [];\n        colHeaderCols = [];\n        if (rowAttrs.length !== 0) {\n          rowHeaders = processKeys(rowKeys, \"pvtRowLabel\");\n        }\n        if (colAttrs.length !== 0) {\n          sTime = Date.now();\n          colHeaders = processKeys(colKeys, \"pvtColLabel\");\n        }\n        result = document.createElement(\"table\");\n        result.className = \"pvtTable\";\n        if (colAttrs.length !== 0) {\n          buildColHeaderHeaders(result, colHeaderRows, rowAttrs);\n          for (j = 0, len = colHeaders.length; j < len; j++) {\n            h = colHeaders[j];\n            buildColHeaders(colHeaderRows, colHeaderCols, h, null, colAttrs, rowAttrs);\n          }\n        }\n        if (rowAttrs.length !== 0) {\n          buildRowHeaderHeaders(result, rowHeaderHeaders, rowAttrs, colAttrs);\n          if (colAttrs.length === 0) {\n            buildRowTotalsHeader(rowHeaderHeaders.tr, colAttrs, rowAttrs);\n          }\n        }\n        if (colAttrs.length !== 0) {\n          sTime = Date.now();\n          buildRowTotalsHeader(colHeaderRows[0], colAttrs, rowAttrs);\n        }\n        if (rowAttrs.length !== 0) {\n          for (k = 0, len1 = rowHeaders.length; k < len1; k++) {\n            h = rowHeaders[k];\n            buildRowHeaders(result, rowHeaderRows, h, rowAttrs, colAttrs);\n          }\n        }\n        buildValues(rowHeaderRows, colHeaderCols);\n        tr = buildColTotalsHeader(rowAttrs, colAttrs);\n        if (colAttrs.length !== 0) {\n          buildColTotals(tr, colHeaderCols);\n        }\n        buildGrandTotal(result, tr);\n        result.setAttribute(\"data-numrows\", rowKeys.length);\n        result.setAttribute(\"data-numcols\", colKeys.length);\n        idx = rowAttrs.indexOf(opts.collapseRowsAt);\n        if (idx !== -1 && idx !== rowAttrs.length - 1) {\n          collapseRowsAt(rowHeaderRows, idx);\n        }\n        return result;\n      };\n      return main(rowAttrs, rowKeys, colAttrs, colKeys);\n    };\n    return $.pivotUtilities.subtotal_renderers = {\n      \"Table With Subtotal\": function(pvtData, opts) {\n        return SubtotalRenderer(pvtData, opts);\n      },\n      \"Table With Subtotal Bar Chart\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).barchart();\n      },\n      \"Table With Subtotal Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap();\n      },\n      \"Table With Subtotal Row Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\");\n      },\n      \"Table With Subtotal Col Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\");\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=subtotal_renderers.js.map\n"],"sourceRoot":"/source/"}