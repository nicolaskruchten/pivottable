{"version":3,"sources":["export_renderers.coffee","export_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","$","svExporter","pivotData","opts","separator","agg","colAttrs","colKey","colKeys","defaults","i","j","k","l","len","len1","len2","len3","len4","len5","m","n","r","result","row","rowAttr","rowAttrs","rowKey","rowKeys","text","localeStrings","csv_sep","extend","getRowKeys","length","push","getColKeys","aggregatorName","join","getAggregator","value","css","width","window","height","pivotUtilities","export_renderers","TSV Export","CSV Export","call","this"],"mappings":"CAAA,WAAA,GAAAA,IAAAA,EAAiB,SAACC,GACd,MAAqB,gBAAXC,UAAyC,gBAAVC,QACrCF,EAAYG,QAAQ,WACC,kBAAVC,SAAyBA,OAAOC,IAC3CD,QAAQ,UAAWJ,GAGnBA,EAAYM,UAEL,SAACC,GAEZ,GAAAC,ECsEA,ODtEAA,GAAa,SAACC,EAAWC,EAAMC,GAC3B,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAqBA,KArBApB,GAAWqB,eACPC,QAAS,MAGb5B,EAAOH,EAAEgC,QAAO,KAAUvB,EAAUN,GAGhCC,EADY,QAAbA,EACa,KAEAD,EAAK2B,cAAcC,QAEnCH,EAAU1B,EAAU+B,aACiB,IAAlBL,EAAQM,QAA3BN,EAAQO,SACR3B,EAAUN,EAAUkC,aACiB,IAAlB5B,EAAQ0B,QAA3B1B,EAAQ2B,SACRT,EAAWxB,EAAUwB,SACrBpB,EAAWJ,EAAUI,SAErBiB,KAEAC,KACAd,EAAA,EAAAI,EAAAY,EAAAQ,OAAAxB,EAAAI,EAAAJ,ICQAe,EAAUC,EAAShB,GDPfc,EAAIW,KAAKV,EACb,IAAqB,IAAlBjB,EAAQ0B,QAAqC,IAArB1B,EAAQ,GAAG0B,OAClCV,EAAIW,KAAKjC,EAAUmC,oBAEnB,KAAA1B,EAAA,EAAAI,EAAAP,EAAA0B,OAAAvB,EAAAI,EAAAJ,ICUFJ,EAASC,EAAQG,GDTXa,EAAIW,KAAK5B,EAAO+B,KAAK,KAI7B,KAFAf,EAAOY,KAAKX,GAEZZ,EAAA,EAAAI,EAAAY,EAAAM,OAAAtB,EAAAI,EAAAJ,IAAA,CAEI,ICSJe,EAASC,EAAQhB,GDVbY,KACAX,EAAA,EAAAI,EAAAU,EAAAO,OAAArB,EAAAI,EAAAJ,ICYFS,EAAIK,EAAOd,GDXLW,EAAIW,KAAKb,EAEb,KAAAF,EAAA,EAAAF,EAAAV,EAAA0B,OAAAd,EAAAF,EAAAE,ICaFb,EAASC,EAAQY,GDZXf,EAAMH,EAAUqC,cAAcZ,EAAQpB,GACnC,MAAAF,EAAAmC,QACChB,EAAIW,KAAK9B,EAAImC,SAEbhB,EAAIW,KAAK,GACjBZ,GAAOY,KAAKX,GAEhB,IADAK,EAAO,GACPR,EAAA,EAAAF,EAAAI,EAAAW,OAAAb,EAAAF,EAAAE,ICiBAC,EAAIC,EAAOF,GDhBPQ,GAAQP,EAAEgB,KAAKlC,GAAW,IAE9B,OAAOJ,GAAE,cAAc6B,KAAKA,GAAMY,KAC1BC,MAAQ1C,EAAE2C,QAAQD,QAAU,EAAK,KACjCE,OAAS5C,EAAE2C,QAAQC,SAAW,EAAK,QAE/C5C,EAAE6C,eAAeC,kBACbC,aAAc,SAAC7C,EAAWC,GCmB1B,MDnBmCF,GAAWC,EAAWC,EAAM,QAC/D6C,aAAc,SAAC9C,EAAWC,GCqB1B,MDrBmCF,GAAWC,EAAWC,EAAM,aC0BpE8C,KAAKC","file":"export_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n\ncallWithJQuery ($) ->\n\n    svExporter = (pivotData, opts, separator) ->\n        defaults = localeStrings: {\n            csv_sep: \",\"\n        }\n\n        opts = $.extend(true, {}, defaults, opts)\n\n        if separator == \"tsv\"\n            separator = \"\\t\"\n        else\n            separator = opts.localeStrings.csv_sep\n\n        rowKeys = pivotData.getRowKeys()\n        rowKeys.push [] if rowKeys.length == 0\n        colKeys = pivotData.getColKeys()\n        colKeys.push [] if colKeys.length == 0\n        rowAttrs = pivotData.rowAttrs\n        colAttrs = pivotData.colAttrs\n\n        result = []\n\n        row = []\n        for rowAttr in rowAttrs\n            row.push rowAttr\n        if colKeys.length == 1 and colKeys[0].length == 0\n            row.push pivotData.aggregatorName\n        else\n            for colKey in colKeys\n                row.push colKey.join(\"-\")\n\n        result.push row\n\n        for rowKey in rowKeys\n            row = []\n            for r in rowKey\n                row.push r\n\n            for colKey in colKeys\n                agg = pivotData.getAggregator(rowKey, colKey)\n                if agg.value()?\n                    row.push agg.value()\n                else\n                    row.push \"\"\n            result.push row\n        text = \"\"\n        for r in result\n            text += r.join(separator)+\"\\n\"\n\n        return $(\"<textarea>\").text(text).css(\n                width: ($(window).width() / 2) + \"px\",\n                height: ($(window).height() / 2) + \"px\")\n\n    $.pivotUtilities.export_renderers = \n        \"TSV Export\": (pivotData, opts) -> svExporter(pivotData, opts, \"tsv\"),\n        \"CSV Export\": (pivotData, opts) -> svExporter(pivotData, opts, \"csv\")\n","(function() {\n  var callWithJQuery;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var svExporter;\n    svExporter = function(pivotData, opts, separator) {\n      var agg, colAttrs, colKey, colKeys, defaults, i, j, k, l, len, len1, len2, len3, len4, len5, m, n, r, result, row, rowAttr, rowAttrs, rowKey, rowKeys, text;\n      defaults = {\n        localeStrings: {\n          csv_sep: \",\"\n        }\n      };\n      opts = $.extend(true, {}, defaults, opts);\n      if (separator === \"tsv\") {\n        separator = \"\\t\";\n      } else {\n        separator = opts.localeStrings.csv_sep;\n      }\n      rowKeys = pivotData.getRowKeys();\n      if (rowKeys.length === 0) {\n        rowKeys.push([]);\n      }\n      colKeys = pivotData.getColKeys();\n      if (colKeys.length === 0) {\n        colKeys.push([]);\n      }\n      rowAttrs = pivotData.rowAttrs;\n      colAttrs = pivotData.colAttrs;\n      result = [];\n      row = [];\n      for (i = 0, len = rowAttrs.length; i < len; i++) {\n        rowAttr = rowAttrs[i];\n        row.push(rowAttr);\n      }\n      if (colKeys.length === 1 && colKeys[0].length === 0) {\n        row.push(pivotData.aggregatorName);\n      } else {\n        for (j = 0, len1 = colKeys.length; j < len1; j++) {\n          colKey = colKeys[j];\n          row.push(colKey.join(\"-\"));\n        }\n      }\n      result.push(row);\n      for (k = 0, len2 = rowKeys.length; k < len2; k++) {\n        rowKey = rowKeys[k];\n        row = [];\n        for (l = 0, len3 = rowKey.length; l < len3; l++) {\n          r = rowKey[l];\n          row.push(r);\n        }\n        for (m = 0, len4 = colKeys.length; m < len4; m++) {\n          colKey = colKeys[m];\n          agg = pivotData.getAggregator(rowKey, colKey);\n          if (agg.value() != null) {\n            row.push(agg.value());\n          } else {\n            row.push(\"\");\n          }\n        }\n        result.push(row);\n      }\n      text = \"\";\n      for (n = 0, len5 = result.length; n < len5; n++) {\n        r = result[n];\n        text += r.join(separator) + \"\\n\";\n      }\n      return $(\"<textarea>\").text(text).css({\n        width: ($(window).width() / 2) + \"px\",\n        height: ($(window).height() / 2) + \"px\"\n      });\n    };\n    return $.pivotUtilities.export_renderers = {\n      \"TSV Export\": function(pivotData, opts) {\n        return svExporter(pivotData, opts, \"tsv\");\n      },\n      \"CSV Export\": function(pivotData, opts) {\n        return svExporter(pivotData, opts, \"csv\");\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=export_renderers.js.map\n"]}