{"version":3,"sources":["/source/pivot_spec.coffee","pivot_spec.min.js"],"names":["fixtureData","raggedFixtureData","name","colour","age","gender","describe","table","beforeEach","done","$","pivotUI","onRefresh","it","expect","find","length","toBe","val","text","join","data","rows","cols","aggregatorName","vals","rendererName","pivot","aggregators","derivers","ref","sortAs","pivotUtilities","aggregator","filter","record","derivedAttributes","birthyear","dateFormat","trialbins","bin","sorters","attr","received_PivotData","received_rendererOptions","count2x","push","this","value","format","x","renderer","a","b","addClass","greeting","rendererOptions","agg","getAggregator","sumOverSumOpts","aoaInput","pd","PivotData","aosInput","raggedAosInput","functionInput","tableInput","getRowKeys","toEqual","getColKeys","c","i","j","len","len1","numNotNull","numNull","r","ref1","naturalSort","sort","numberFormat","nf","scaler","suffix","thousandsSep","decimalSep","prefix","digitsAfterDecimal","showZero","df","Date","binner","toBeNaN","call"],"mappings":"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","file":"pivot_spec.min.js","sourcesContent":["fixtureData = [\n    [\"name\",    \"gender\",   \"colour\",    \"birthday\",     \"trials\",   \"successes\"],\n    [\"Nick\",    \"male\",     \"blue\",      \"1982-11-07\",   103,        12],\n    [\"Jane\",    \"female\",   \"red\",       \"1982-11-08\",   95,         25],\n    [\"John\",    \"male\",     \"blue\",      \"1982-12-08\",   112,        30],\n    [\"Carol\",   \"female\",   \"yellow\",    \"1983-12-08\",   102,        14]\n]\n\nraggedFixtureData = [\n    {name: \"Nick\", \"colour\": \"red\", \"age\": 34}\n    {name: \"Jane\", \"gender\": \"female\"}\n    {name: \"John\", \"gender\": \"male\", \"age\": 12}\n    {name: \"Jim\", \"gender\": null, \"age\": 12}\n]\n\ndescribe \"$.pivotUI()\", ->\n    describe \"with no rows/cols, default count aggregator, default TableRenderer\",  ->\n        table = null\n\n        beforeEach (done) ->\n            table = $(\"<div>\").pivotUI fixtureData, onRefresh: done\n        it \"has all the basic UI elements\", (done) ->\n            expect table.find(\"td.pvtAxisContainer\").length\n            .toBe  3\n            expect table.find(\"td.pvtRendererArea\").length\n            .toBe  1\n            expect table.find(\"td.pvtVals\").length\n            .toBe  1\n            expect table.find(\"select.pvtRenderer\").length\n            .toBe  1\n            expect table.find(\"select.pvtAggregator\").length\n            .toBe  1\n            expect table.find(\"span.pvtAttr\").length\n            .toBe  6\n            done()\n\n        it \"reflects its inputs\", (done) ->\n            expect table.find(\"td.pvtUnused span.pvtAttr\").length\n            .toBe  6\n            expect table.find(\"select.pvtRenderer\").val()\n            .toBe  \"Table\"\n            expect table.find(\"select.pvtAggregator\").val()\n            .toBe  \"Count\"\n            done()\n\n        it \"renders a table\", (done) ->\n            expect table.find(\"table.pvtTable\").length\n            .toBe  1\n            done()\n\n\n        describe \"its renderer output\", ->\n            it \"has the correct type and number of cells\", (done) ->\n                expect table.find(\"th.pvtTotalLabel\").length\n                .toBe  1\n                expect table.find(\"td.pvtGrandTotal\").length\n                .toBe  1\n                done()\n\n            it \"has the correct textual representation\", (done) ->\n                expect table.find(\"table.pvtTable\").text()\n                .toBe [\"Totals\", \"4\"].join(\"\")\n                done()\n\n            it \"has a correct grand total with data value\", (done) ->\n                expect table.find(\"td.pvtGrandTotal\").text()\n                .toBe  \"4\"\n                expect table.find(\"td.pvtGrandTotal\").data(\"value\")\n                .toBe  4\n                done()\n\n    describe \"with rows/cols, sum-over-sum aggregator, Heatmap renderer\",  ->\n        table = null\n\n        beforeEach (done) ->\n            table = $(\"<div>\").pivotUI fixtureData,\n                rows: [\"gender\"], cols: [\"colour\"]\n                aggregatorName: \"Sum over Sum\"\n                vals: [\"successes\", \"trials\"]\n                rendererName: \"Heatmap\"\n                onRefresh: done\n\n        it \"has all the basic UI elements\", (done) ->\n            expect table.find(\"td.pvtAxisContainer\").length\n            .toBe  3\n            expect table.find(\"td.pvtRendererArea\").length\n            .toBe  1\n            expect table.find(\"td.pvtVals\").length\n            .toBe  1\n            expect table.find(\"select.pvtRenderer\").length\n            .toBe  1\n            expect table.find(\"select.pvtAggregator\").length\n            .toBe  1\n            expect table.find(\"span.pvtAttr\").length\n            .toBe  6\n            done()\n\n        it \"reflects its inputs\", (done) ->\n            expect table.find(\"td.pvtUnused span.pvtAttr\").length\n            .toBe  4\n            expect table.find(\"td.pvtRows span.pvtAttr\").length\n            .toBe  1\n            expect table.find(\"td.pvtCols span.pvtAttr\").length\n            .toBe  1\n            expect table.find(\"select.pvtRenderer\").val()\n            .toBe  \"Heatmap\"\n            expect table.find(\"select.pvtAggregator\").val()\n            .toBe  \"Sum over Sum\"\n            done()\n\n        it \"renders a table\", (done) ->\n            expect table.find(\"table.pvtTable\").length\n            .toBe  1\n            done()\n\n        describe \"its renderer output\", ->\n            it \"has the correct type and number of cells\", (done) ->\n                expect table.find(\"th.pvtAxisLabel\").length\n                .toBe  2\n                expect table.find(\"th.pvtRowLabel\").length\n                .toBe  2\n                expect table.find(\"th.pvtColLabel\").length\n                .toBe  3\n                expect table.find(\"th.pvtTotalLabel\").length\n                .toBe  2\n                expect table.find(\"td.pvtVal\").length\n                .toBe  6\n                expect table.find(\"td.pvtTotal\").length\n                .toBe  5\n                expect table.find(\"td.pvtGrandTotal\").length\n                .toBe  1\n                done()\n\n            it \"has the correct textual representation\", (done) ->\n                expect table.find(\"table.pvtTable\").text()\n                .toBe [\n                    \"colour\",   \"blue\", \"red\",  \"yellow\",   \"Totals\",\n                    \"gender\",\n                    \"female\",           \"0.26\", \"0.14\",     \"0.20\",\n                    \"male\",     \"0.20\",                     \"0.20\",\n                    \"Totals\",   \"0.20\", \"0.26\", \"0.14\",     \"0.20\"\n                    ].join(\"\")\n                done()\n\n            it \"has a correct spot-checked cell with data value\", (done) ->\n                expect table.find(\"td.col0.row1\").text()\n                .toBe  \"0.20\"\n                expect table.find(\"td.col0.row1\").data(\"value\")\n                .toBe  (12+30)/(103+112)\n                done()\n\n    describe \"with ragged input\",  ->\n        table = $(\"<div>\").pivotUI raggedFixtureData, rows: [\"gender\"], cols: [\"age\"]\n\n        it \"renders a table with the correct textual representation\", ->\n            expect table.find(\"table.pvtTable\").text()\n            .toBe [\n                \"age\",     \"12\",  \"34\",  \"null\",  \"Totals\"\n                \"gender\",\n                \"female\",                 \"1\",    \"1\"\n                \"male\",    \"1\",                   \"1\"\n                \"null\",    \"1\",    \"1\",           \"2\"\n                \"Totals\",  \"2\",    \"1\",   \"1\",    \"4\"\n                ].join(\"\")\n\ndescribe \"$.pivot()\", ->\n\n    describe \"with no rows/cols, default count aggregator, default TableRenderer\",  ->\n        table = $(\"<div>\").pivot fixtureData\n\n        it \"renders a table\", ->\n            expect table.find(\"table.pvtTable\").length\n            .toBe  1\n\n        describe \"its renderer output\", ->\n\n            it \"has the correct textual representation\", ->\n                expect table.find(\"table.pvtTable\").text()\n                .toBe [\"Totals\", \"4\"].join(\"\")\n\n            it \"has a correct grand total with data value\", ->\n                expect table.find(\"td.pvtGrandTotal\").text()\n                .toBe  \"4\"\n                expect table.find(\"td.pvtGrandTotal\").data(\"value\")\n                .toBe  4\n\n    describe \"with rows/cols, sum aggregator, derivedAttributes, filter and sorters\",  ->\n        {sortAs, derivers, aggregators} = $.pivotUtilities\n        table = $(\"<div>\").pivot fixtureData,\n            rows: [\"gender\"], cols: [\"birthyear\"], aggregator: aggregators[\"Sum\"]([\"trialbins\"])\n            filter: (record) -> record.name != \"Nick\"\n            derivedAttributes:\n                birthyear: derivers.dateFormat \"birthday\", \"%y\"\n                trialbins: derivers.bin \"trials\", 10\n            sorters: (attr) ->\n                if attr == \"gender\" then return sortAs([\"male\", \"female\"])\n\n        it \"renders a table with the correct textual representation\", ->\n            expect table.find(\"table.pvtTable\").text()\n            .toBe [\n                \"birthyear\",    \"1982\",     \"1983\",     \"Totals\"\n                \"gender\",\n                \"male\",         \"110.00\",               \"110.00\"\n                \"female\",       \"90.00\",    \"100.00\",   \"190.00\"\n                \"Totals\",       \"200.00\",   \"100.00\",   \"300.00\"\n                ].join(\"\")\n\n    describe \"with rows/cols, fraction-of aggregator\",  ->\n        {aggregators} = $.pivotUtilities\n        table = $(\"<div>\").pivot fixtureData,\n            rows: [\"gender\"]\n            aggregator: aggregators[\"Sum as Fraction of Total\"]([\"trials\"])\n\n        it \"renders a table with the correct textual representation\", ->\n            expect table.find(\"table.pvtTable\").text()\n            .toBe [\n                \"gender\",  \"Totals\"\n                \"female\",  \"47.8%\"\n                \"male\",    \"52.2%\"\n                \"Totals\",  \"100.0%\"\n                ].join(\"\")\n\n    describe \"with rows/cols, custom aggregator, custom renderer with options\",  ->\n        received_PivotData = null\n        received_rendererOptions = null\n\n        table = $(\"<div>\").pivot fixtureData,\n            rows: [\"name\", \"colour\"], cols: [\"trials\", \"successes\"]\n            aggregator: ->\n                count2x: 0\n                push: -> @count2x +=2\n                value: -> @count2x\n                format: (x) -> \"formatted \" + x\n            renderer: (a,b) ->\n                received_PivotData = a\n                received_rendererOptions = b\n                return $(\"<div>\").addClass(b.greeting).text(\"world\")\n            rendererOptions: {greeting:\"hithere\"}\n\n        it \"renders the custom renderer as per options\", ->\n            expect table.find(\"div.hithere\").length\n            .toBe  1\n\n        describe \"its received PivotData object\", ->\n            it \"has a correct grand total value and format for custom aggregator\", ->\n                agg = received_PivotData.getAggregator([],[])\n                val = agg.value()\n                expect(val).toBe 8\n                expect(agg.format(val)).toBe \"formatted 8\"\n\n\n    describe \"with ragged input\",  ->\n        table = $(\"<div>\").pivot raggedFixtureData, rows: [\"gender\"], cols: [\"age\"]\n\n        it \"renders a table with the correct textual representation\", ->\n            expect table.find(\"table.pvtTable\").text()\n            .toBe [\n                \"age\",     \"12\",  \"34\",  \"null\",  \"Totals\"\n                \"gender\",\n                \"female\",                 \"1\",    \"1\"\n                \"male\",    \"1\",                   \"1\"\n                \"null\",    \"1\",    \"1\",           \"2\"\n                \"Totals\",  \"2\",    \"1\",   \"1\",    \"4\"\n                ].join(\"\")\n\ndescribe \"$.pivotUtilities\", ->\n\n    describe \".PivotData()\", ->\n        sumOverSumOpts =\n            rows: [], cols: []\n            aggregator: $.pivotUtilities.aggregators[\"Sum over Sum\"]([\"a\",\"b\"])\n            filter: -> true\n            sorters: ->\n\n        describe \"with array-of-array input\", ->\n            aoaInput =  [ [\"a\",\"b\"], [1,2], [3,4] ]\n            pd = new $.pivotUtilities.PivotData aoaInput, sumOverSumOpts\n\n            it \"has the correct grand total value\", ->\n                expect pd.getAggregator([],[]).value()\n                .toBe (1+3)/(2+4)\n\n        describe \"with array-of-object input\", ->\n            aosInput =  [ {a:1, b:2}, {a:3, b:4} ]\n            pd = new $.pivotUtilities.PivotData aosInput, sumOverSumOpts\n\n            it \"has the correct grand total value\", ->\n                expect pd.getAggregator([],[]).value()\n                .toBe (1+3)/(2+4)\n\n        describe \"with ragged array-of-object input\", ->\n            raggedAosInput =  [ {a:1}, {b:4}, {a: 3, b: 2} ]\n            pd = new $.pivotUtilities.PivotData raggedAosInput, sumOverSumOpts\n\n            it \"has the correct grand total value\", ->\n                expect pd.getAggregator([],[]).value()\n                .toBe (1+3)/(2+4)\n\n        describe \"with function input\", ->\n            functionInput = (record) ->\n                record a:1, b:2\n                record a:3, b:4\n            pd = new $.pivotUtilities.PivotData functionInput, sumOverSumOpts\n\n            it \"has the correct grand total value\", ->\n                expect pd.getAggregator([],[]).value()\n                .toBe (1+3)/(2+4)\n\n        describe \"with jQuery table element input\", ->\n            tableInput = $ \"\"\"\n                <table>\n                    <thead>\n                        <tr> <th>a</th><th>b</th> </tr>\n                    </thead>\n                    <tbody>\n                        <tr> <td>1</td> <td>2</td> </tr>\n                        <tr> <td>3</td> <td>4</td> </tr>\n                    </tbody>\n                </table>\n                \"\"\"\n\n            pd = new $.pivotUtilities.PivotData tableInput, sumOverSumOpts\n\n            it \"has the correct grand total value\", ->\n                expect pd.getAggregator([],[]).value()\n                .toBe (1+3)/(2+4)\n\n\n        describe \"with rows/cols, no filters/sorters, count aggregator\", ->\n            pd = new $.pivotUtilities.PivotData fixtureData,\n                rows: [\"name\", \"colour\"],\n                cols: [\"trials\", \"successes\"],\n                aggregator: $.pivotUtilities.aggregators[\"Count\"](),\n                filter: -> true\n                sorters: ->\n\n            it \"has correctly-ordered row keys\", ->\n                expect pd.getRowKeys()\n                .toEqual [ [ 'Carol', 'yellow' ], [ 'Jane', 'red' ], [ 'John', 'blue' ], [ 'Nick', 'blue' ] ]\n\n            it \"has correctly-ordered col keys\", ->\n                expect pd.getColKeys()\n                .toEqual [ [ 95, 25 ], [ 102, 14 ], [ 103, 12 ], [ 112, 30 ] ]\n\n            it \"can be iterated over\", ->\n                numNotNull = 0\n                numNull = 0\n                for r in pd.getRowKeys()\n                    for c in pd.getColKeys()\n                        if pd.getAggregator(r, c).value()?\n                            numNotNull++\n                        else\n                            numNull++\n                expect numNotNull\n                .toBe 4\n                expect numNull\n                .toBe 12\n\n            it \"has a correct spot-checked aggregator\", ->\n                agg = pd.getAggregator([ 'Carol', 'yellow' ],[ 102, 14 ])\n                val = agg.value()\n                expect(val).toBe 1\n                expect(agg.format(val)).toBe \"1\"\n\n            it \"has a correct grand total aggregator\", ->\n                agg = pd.getAggregator([],[])\n                val = agg.value()\n                expect(val).toBe 4\n                expect(agg.format(val)).toBe \"4\"\n\n    describe \".naturalSort()\", ->\n        naturalSort = $.pivotUtilities.naturalSort\n\n        it \"sorts numbers\", ->\n            expect [2,1,3,4,0].sort naturalSort\n            .toEqual [0,1,2,3,4]\n\n        it \"sorts strings case-sensitively\", ->\n            expect ['b','a','c','d','A','a','A'].sort naturalSort\n            .toEqual ['A','A','a','a','b','c','d']\n\n        it \"sorts numbers in strings\", ->\n            expect ['1','12','2','10','11','112'].sort naturalSort\n            .toEqual ['1','2','10','11','12','112']\n\n        it \"sorts 0-padded numbers\", ->\n            expect ['02','01','10','11'].sort naturalSort\n            .toEqual ['01','02','10','11']\n\n    describe \".sortAs()\", ->\n        sortAs = $.pivotUtilities.sortAs\n\n        it \"sorts with unknown values sorted at the end\", ->\n            expect [5,2,3,4,1].sort sortAs([4,3,2])\n            .toEqual [4,3,2,1,5]\n\n    describe \".numberFormat()\", ->\n        numberFormat = $.pivotUtilities.numberFormat\n\n        it \"formats numbers\", ->\n            nf = numberFormat()\n            expect nf 1234567.89123456\n            .toEqual \"1,234,567.89\"\n\n        it \"formats booleans\", ->\n            nf = numberFormat()\n            expect nf true\n            .toEqual \"1.00\"\n\n        it \"formats numbers in strings\", ->\n            nf = numberFormat()\n            expect nf \"1234567.89123456\"\n            .toEqual \"1,234,567.89\"\n\n        it \"doesn't formats strings\", ->\n            nf = numberFormat()\n            expect nf \"hi there\"\n            .toEqual \"\"\n\n        it \"doesn't formats objects\", ->\n            nf = numberFormat()\n            expect nf {a:1}\n            .toEqual \"\"\n\n        it \"formats percentages\", ->\n            nf = numberFormat(scaler: 100, suffix: \"%\")\n            expect nf 0.12345\n            .toEqual \"12.35%\"\n\n        it \"adds separators\", ->\n            nf = numberFormat(thousandsSep: \"a\", decimalSep: \"b\")\n            expect nf 1234567.89123456\n            .toEqual \"1a234a567b89\"\n\n        it \"adds prefixes and suffixes\", ->\n            nf = numberFormat(prefix: \"a\", suffix: \"b\")\n            expect nf 1234567.89123456\n            .toEqual \"a1,234,567.89b\"\n\n        it \"scales and rounds\", ->\n            nf = numberFormat(digitsAfterDecimal: 3, scaler: 1000)\n            expect nf 1234567.89123456\n            .toEqual \"1,234,567,891.235\"\n\n        it \"shows and hides zero\", ->\n            nf = numberFormat(showZero: true)\n            expect nf 0\n            .toEqual \"0.00\"\n\n            nf = numberFormat(showZero: false)\n            expect nf 0\n            .toEqual \"\"\n\n    describe \".derivers\", ->\n        describe \".dateFormat()\", ->\n            df = $.pivotUtilities.derivers.dateFormat \"x\", \"abc % %% %%% %a %y %m %n %d %w %x %H %M %S\", true\n\n            it \"formats date objects\", ->\n                expect df {x: new Date(\"2015-01-02T23:43:11Z\")}\n                .toBe 'abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11'\n\n            it \"formats input parsed by Date.parse()\", ->\n                expect df {x: \"2015-01-02T23:43:11Z\"}\n                .toBe 'abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11'\n\n                expect df {x: \"bla\"}\n                .toBe ''\n\n        describe \".bin()\", ->\n            binner = $.pivotUtilities.derivers.bin \"x\", 10\n\n            it \"bins numbers\", ->\n                expect binner {x: 11}\n                .toBe 10\n\n                expect binner {x: 9}\n                .toBe 0\n\n                expect binner {x: 111}\n                .toBe 110\n\n            it \"bins booleans\", ->\n                expect binner {x: true}\n                .toBe 0\n\n            it \"bins negative numbers\", ->\n                expect binner {x: -12}\n                .toBe -10\n\n            it \"doesn't bin strings\", ->\n                expect binner {x: \"a\"}\n                .toBeNaN()\n\n            it \"doesn't bin objects\", ->\n                expect binner {x: {a:1}}\n                .toBeNaN()\n\n# todo\n# agg templates\n# date.parse -> date() ?\n# default options for PivotData, including filter\n","(function(){var t,e;t=[[\"name\",\"gender\",\"colour\",\"birthday\",\"trials\",\"successes\"],[\"Nick\",\"male\",\"blue\",\"1982-11-07\",103,12],[\"Jane\",\"female\",\"red\",\"1982-11-08\",95,25],[\"John\",\"male\",\"blue\",\"1982-12-08\",112,30],[\"Carol\",\"female\",\"yellow\",\"1983-12-08\",102,14]],e=[{name:\"Nick\",colour:\"red\",age:34},{name:\"Jane\",gender:\"female\"},{name:\"John\",gender:\"male\",age:12},{name:\"Jim\",gender:null,age:12}],describe(\"$.pivotUI()\",function(){return describe(\"with no rows/cols, default count aggregator, default TableRenderer\",function(){var e;return e=null,beforeEach(function(r){return e=$(\"<div>\").pivotUI(t,{onRefresh:r})}),it(\"has all the basic UI elements\",function(t){return expect(e.find(\"td.pvtAxisContainer\").length).toBe(3),expect(e.find(\"td.pvtRendererArea\").length).toBe(1),expect(e.find(\"td.pvtVals\").length).toBe(1),expect(e.find(\"select.pvtRenderer\").length).toBe(1),expect(e.find(\"select.pvtAggregator\").length).toBe(1),expect(e.find(\"span.pvtAttr\").length).toBe(6),t()}),it(\"reflects its inputs\",function(t){return expect(e.find(\"td.pvtUnused span.pvtAttr\").length).toBe(6),expect(e.find(\"select.pvtRenderer\").val()).toBe(\"Table\"),expect(e.find(\"select.pvtAggregator\").val()).toBe(\"Count\"),t()}),it(\"renders a table\",function(t){return expect(e.find(\"table.pvtTable\").length).toBe(1),t()}),describe(\"its renderer output\",function(){return it(\"has the correct type and number of cells\",function(t){return expect(e.find(\"th.pvtTotalLabel\").length).toBe(1),expect(e.find(\"td.pvtGrandTotal\").length).toBe(1),t()}),it(\"has the correct textual representation\",function(t){return expect(e.find(\"table.pvtTable\").text()).toBe([\"Totals\",\"4\"].join(\"\")),t()}),it(\"has a correct grand total with data value\",function(t){return expect(e.find(\"td.pvtGrandTotal\").text()).toBe(\"4\"),expect(e.find(\"td.pvtGrandTotal\").data(\"value\")).toBe(4),t()})})}),describe(\"with rows/cols, sum-over-sum aggregator, Heatmap renderer\",function(){var e;return e=null,beforeEach(function(r){return e=$(\"<div>\").pivotUI(t,{rows:[\"gender\"],cols:[\"colour\"],aggregatorName:\"Sum over Sum\",vals:[\"successes\",\"trials\"],rendererName:\"Heatmap\",onRefresh:r})}),it(\"has all the basic UI elements\",function(t){return expect(e.find(\"td.pvtAxisContainer\").length).toBe(3),expect(e.find(\"td.pvtRendererArea\").length).toBe(1),expect(e.find(\"td.pvtVals\").length).toBe(1),expect(e.find(\"select.pvtRenderer\").length).toBe(1),expect(e.find(\"select.pvtAggregator\").length).toBe(1),expect(e.find(\"span.pvtAttr\").length).toBe(6),t()}),it(\"reflects its inputs\",function(t){return expect(e.find(\"td.pvtUnused span.pvtAttr\").length).toBe(4),expect(e.find(\"td.pvtRows span.pvtAttr\").length).toBe(1),expect(e.find(\"td.pvtCols span.pvtAttr\").length).toBe(1),expect(e.find(\"select.pvtRenderer\").val()).toBe(\"Heatmap\"),expect(e.find(\"select.pvtAggregator\").val()).toBe(\"Sum over Sum\"),t()}),it(\"renders a table\",function(t){return expect(e.find(\"table.pvtTable\").length).toBe(1),t()}),describe(\"its renderer output\",function(){return it(\"has the correct type and number of cells\",function(t){return expect(e.find(\"th.pvtAxisLabel\").length).toBe(2),expect(e.find(\"th.pvtRowLabel\").length).toBe(2),expect(e.find(\"th.pvtColLabel\").length).toBe(3),expect(e.find(\"th.pvtTotalLabel\").length).toBe(2),expect(e.find(\"td.pvtVal\").length).toBe(6),expect(e.find(\"td.pvtTotal\").length).toBe(5),expect(e.find(\"td.pvtGrandTotal\").length).toBe(1),t()}),it(\"has the correct textual representation\",function(t){return expect(e.find(\"table.pvtTable\").text()).toBe([\"colour\",\"blue\",\"red\",\"yellow\",\"Totals\",\"gender\",\"female\",\"0.26\",\"0.14\",\"0.20\",\"male\",\"0.20\",\"0.20\",\"Totals\",\"0.20\",\"0.26\",\"0.14\",\"0.20\"].join(\"\")),t()}),it(\"has a correct spot-checked cell with data value\",function(t){return expect(e.find(\"td.col0.row1\").text()).toBe(\"0.20\"),expect(e.find(\"td.col0.row1\").data(\"value\")).toBe(42/215),t()})})}),describe(\"with ragged input\",function(){var t;return t=$(\"<div>\").pivotUI(e,{rows:[\"gender\"],cols:[\"age\"]}),it(\"renders a table with the correct textual representation\",function(){return expect(t.find(\"table.pvtTable\").text()).toBe([\"age\",\"12\",\"34\",\"null\",\"Totals\",\"gender\",\"female\",\"1\",\"1\",\"male\",\"1\",\"1\",\"null\",\"1\",\"1\",\"2\",\"Totals\",\"2\",\"1\",\"1\",\"4\"].join(\"\"))})})}),describe(\"$.pivot()\",function(){return describe(\"with no rows/cols, default count aggregator, default TableRenderer\",function(){var e;return e=$(\"<div>\").pivot(t),it(\"renders a table\",function(){return expect(e.find(\"table.pvtTable\").length).toBe(1)}),describe(\"its renderer output\",function(){return it(\"has the correct textual representation\",function(){return expect(e.find(\"table.pvtTable\").text()).toBe([\"Totals\",\"4\"].join(\"\"))}),it(\"has a correct grand total with data value\",function(){return expect(e.find(\"td.pvtGrandTotal\").text()).toBe(\"4\"),expect(e.find(\"td.pvtGrandTotal\").data(\"value\")).toBe(4)})})}),describe(\"with rows/cols, sum aggregator, derivedAttributes, filter and sorters\",function(){var e,r,n,o,a;return n=$.pivotUtilities,o=n.sortAs,r=n.derivers,e=n.aggregators,a=$(\"<div>\").pivot(t,{rows:[\"gender\"],cols:[\"birthyear\"],aggregator:e.Sum([\"trialbins\"]),filter:function(t){return\"Nick\"!==t.name},derivedAttributes:{birthyear:r.dateFormat(\"birthday\",\"%y\"),trialbins:r.bin(\"trials\",10)},sorters:function(t){return\"gender\"===t?o([\"male\",\"female\"]):void 0}}),it(\"renders a table with the correct textual representation\",function(){return expect(a.find(\"table.pvtTable\").text()).toBe([\"birthyear\",\"1982\",\"1983\",\"Totals\",\"gender\",\"male\",\"110.00\",\"110.00\",\"female\",\"90.00\",\"100.00\",\"190.00\",\"Totals\",\"200.00\",\"100.00\",\"300.00\"].join(\"\"))})}),describe(\"with rows/cols, fraction-of aggregator\",function(){var e,r;return e=$.pivotUtilities.aggregators,r=$(\"<div>\").pivot(t,{rows:[\"gender\"],aggregator:e[\"Sum as Fraction of Total\"]([\"trials\"])}),it(\"renders a table with the correct textual representation\",function(){return expect(r.find(\"table.pvtTable\").text()).toBe([\"gender\",\"Totals\",\"female\",\"47.8%\",\"male\",\"52.2%\",\"Totals\",\"100.0%\"].join(\"\"))})}),describe(\"with rows/cols, custom aggregator, custom renderer with options\",function(){var e,r,n;return e=null,r=null,n=$(\"<div>\").pivot(t,{rows:[\"name\",\"colour\"],cols:[\"trials\",\"successes\"],aggregator:function(){return{count2x:0,push:function(){return this.count2x+=2},value:function(){return this.count2x},format:function(t){return\"formatted \"+t}}},renderer:function(t,n){return e=t,r=n,$(\"<div>\").addClass(n.greeting).text(\"world\")},rendererOptions:{greeting:\"hithere\"}}),it(\"renders the custom renderer as per options\",function(){return expect(n.find(\"div.hithere\").length).toBe(1)}),describe(\"its received PivotData object\",function(){return it(\"has a correct grand total value and format for custom aggregator\",function(){var t,r;return t=e.getAggregator([],[]),r=t.value(),expect(r).toBe(8),expect(t.format(r)).toBe(\"formatted 8\")})})}),describe(\"with ragged input\",function(){var t;return t=$(\"<div>\").pivot(e,{rows:[\"gender\"],cols:[\"age\"]}),it(\"renders a table with the correct textual representation\",function(){return expect(t.find(\"table.pvtTable\").text()).toBe([\"age\",\"12\",\"34\",\"null\",\"Totals\",\"gender\",\"female\",\"1\",\"1\",\"male\",\"1\",\"1\",\"null\",\"1\",\"1\",\"2\",\"Totals\",\"2\",\"1\",\"1\",\"4\"].join(\"\"))})})}),describe(\"$.pivotUtilities\",function(){return describe(\".PivotData()\",function(){var e;return e={rows:[],cols:[],aggregator:$.pivotUtilities.aggregators[\"Sum over Sum\"]([\"a\",\"b\"]),filter:function(){return!0},sorters:function(){}},describe(\"with array-of-array input\",function(){var t,r;return t=[[\"a\",\"b\"],[1,2],[3,4]],r=new $.pivotUtilities.PivotData(t,e),it(\"has the correct grand total value\",function(){return expect(r.getAggregator([],[]).value()).toBe(4/6)})}),describe(\"with array-of-object input\",function(){var t,r;return t=[{a:1,b:2},{a:3,b:4}],r=new $.pivotUtilities.PivotData(t,e),it(\"has the correct grand total value\",function(){return expect(r.getAggregator([],[]).value()).toBe(4/6)})}),describe(\"with ragged array-of-object input\",function(){var t,r;return r=[{a:1},{b:4},{a:3,b:2}],t=new $.pivotUtilities.PivotData(r,e),it(\"has the correct grand total value\",function(){return expect(t.getAggregator([],[]).value()).toBe(4/6)})}),describe(\"with function input\",function(){var t,r;return t=function(t){return t({a:1,b:2}),t({a:3,b:4})},r=new $.pivotUtilities.PivotData(t,e),it(\"has the correct grand total value\",function(){return expect(r.getAggregator([],[]).value()).toBe(4/6)})}),describe(\"with jQuery table element input\",function(){var t,r;return r=$(\"<table>\\n    <thead>\\n        <tr> <th>a</th><th>b</th> </tr>\\n    </thead>\\n    <tbody>\\n        <tr> <td>1</td> <td>2</td> </tr>\\n        <tr> <td>3</td> <td>4</td> </tr>\\n    </tbody>\\n</table>\"),t=new $.pivotUtilities.PivotData(r,e),it(\"has the correct grand total value\",function(){return expect(t.getAggregator([],[]).value()).toBe(4/6)})}),describe(\"with rows/cols, no filters/sorters, count aggregator\",function(){var e;return e=new $.pivotUtilities.PivotData(t,{rows:[\"name\",\"colour\"],cols:[\"trials\",\"successes\"],aggregator:$.pivotUtilities.aggregators.Count(),filter:function(){return!0},sorters:function(){}}),it(\"has correctly-ordered row keys\",function(){return expect(e.getRowKeys()).toEqual([[\"Carol\",\"yellow\"],[\"Jane\",\"red\"],[\"John\",\"blue\"],[\"Nick\",\"blue\"]])}),it(\"has correctly-ordered col keys\",function(){return expect(e.getColKeys()).toEqual([[95,25],[102,14],[103,12],[112,30]])}),it(\"can be iterated over\",function(){var t,r,n,o,a,i,c,u,s,l;for(i=0,c=0,s=e.getRowKeys(),r=0,o=s.length;o>r;r++)for(u=s[r],l=e.getColKeys(),n=0,a=l.length;a>n;n++)t=l[n],null!=e.getAggregator(u,t).value()?i++:c++;return expect(i).toBe(4),expect(c).toBe(12)}),it(\"has a correct spot-checked aggregator\",function(){var t,r;return t=e.getAggregator([\"Carol\",\"yellow\"],[102,14]),r=t.value(),expect(r).toBe(1),expect(t.format(r)).toBe(\"1\")}),it(\"has a correct grand total aggregator\",function(){var t,r;return t=e.getAggregator([],[]),r=t.value(),expect(r).toBe(4),expect(t.format(r)).toBe(\"4\")})})}),describe(\".naturalSort()\",function(){var t;return t=$.pivotUtilities.naturalSort,it(\"sorts numbers\",function(){return expect([2,1,3,4,0].sort(t)).toEqual([0,1,2,3,4])}),it(\"sorts strings case-sensitively\",function(){return expect([\"b\",\"a\",\"c\",\"d\",\"A\",\"a\",\"A\"].sort(t)).toEqual([\"A\",\"A\",\"a\",\"a\",\"b\",\"c\",\"d\"])}),it(\"sorts numbers in strings\",function(){return expect([\"1\",\"12\",\"2\",\"10\",\"11\",\"112\"].sort(t)).toEqual([\"1\",\"2\",\"10\",\"11\",\"12\",\"112\"])}),it(\"sorts 0-padded numbers\",function(){return expect([\"02\",\"01\",\"10\",\"11\"].sort(t)).toEqual([\"01\",\"02\",\"10\",\"11\"])})}),describe(\".sortAs()\",function(){var t;return t=$.pivotUtilities.sortAs,it(\"sorts with unknown values sorted at the end\",function(){return expect([5,2,3,4,1].sort(t([4,3,2]))).toEqual([4,3,2,1,5])})}),describe(\".numberFormat()\",function(){var t;return t=$.pivotUtilities.numberFormat,it(\"formats numbers\",function(){var e;return e=t(),expect(e(1234567.89123456)).toEqual(\"1,234,567.89\")}),it(\"formats booleans\",function(){var e;return e=t(),expect(e(!0)).toEqual(\"1.00\")}),it(\"formats numbers in strings\",function(){var e;return e=t(),expect(e(\"1234567.89123456\")).toEqual(\"1,234,567.89\")}),it(\"doesn't formats strings\",function(){var e;return e=t(),expect(e(\"hi there\")).toEqual(\"\")}),it(\"doesn't formats objects\",function(){var e;return e=t(),expect(e({a:1})).toEqual(\"\")}),it(\"formats percentages\",function(){var e;return e=t({scaler:100,suffix:\"%\"}),expect(e(.12345)).toEqual(\"12.35%\")}),it(\"adds separators\",function(){var e;return e=t({thousandsSep:\"a\",decimalSep:\"b\"}),expect(e(1234567.89123456)).toEqual(\"1a234a567b89\")}),it(\"adds prefixes and suffixes\",function(){var e;return e=t({prefix:\"a\",suffix:\"b\"}),expect(e(1234567.89123456)).toEqual(\"a1,234,567.89b\")}),it(\"scales and rounds\",function(){var e;return e=t({digitsAfterDecimal:3,scaler:1e3}),expect(e(1234567.89123456)).toEqual(\"1,234,567,891.235\")}),it(\"shows and hides zero\",function(){var e;return e=t({showZero:!0}),expect(e(0)).toEqual(\"0.00\"),e=t({showZero:!1}),expect(e(0)).toEqual(\"\")})}),describe(\".derivers\",function(){return describe(\".dateFormat()\",function(){var t;return t=$.pivotUtilities.derivers.dateFormat(\"x\",\"abc % %% %%% %a %y %m %n %d %w %x %H %M %S\",!0),it(\"formats date objects\",function(){return expect(t({x:new Date(\"2015-01-02T23:43:11Z\")})).toBe(\"abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11\")}),it(\"formats input parsed by Date.parse()\",function(){return expect(t({x:\"2015-01-02T23:43:11Z\"})).toBe(\"abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11\"),expect(t({x:\"bla\"})).toBe(\"\")})}),describe(\".bin()\",function(){var t;return t=$.pivotUtilities.derivers.bin(\"x\",10),it(\"bins numbers\",function(){return expect(t({x:11})).toBe(10),expect(t({x:9})).toBe(0),expect(t({x:111})).toBe(110)}),it(\"bins booleans\",function(){return expect(t({x:!0})).toBe(0)}),it(\"bins negative numbers\",function(){return expect(t({x:-12})).toBe(-10)}),it(\"doesn't bin strings\",function(){return expect(t({x:\"a\"})).toBeNaN()}),it(\"doesn't bin objects\",function(){return expect(t({x:{a:1}})).toBeNaN()})})})})}).call(this);\n//# sourceMappingURL=pivot_spec.min.js.map"],"sourceRoot":"/source/"}