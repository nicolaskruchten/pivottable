{"version":3,"sources":["d3_renderers.coffee"],"names":[],"mappings":"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","file":"d3_renderers.js","sourceRoot":"/source/","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\"), require(\"d3\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\", \"d3\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery, d3\n\ncallWithJQuery ($, d3) ->\n\n    $.pivotUtilities.d3_renderers = Treemap: (pivotData, opts) ->\n        defaults =\n            localeStrings: {}\n            d3:\n                width: -> $(window).width() / 1.4\n                height: -> $(window).height() / 1.4\n\n        opts = $.extend defaults, opts\n\n\n        result = $(\"<div>\").css(width: \"100%\", height: \"100%\")\n\n        tree = name: \"All\", children: []\n        addToTree = (tree, path, value) ->\n            if path.length == 0\n                tree.value = value\n                return\n            tree.children ?= []\n            x = path.shift()\n            for child in tree.children when child.name == x\n                addToTree(child, path, value)\n                return\n            newChild = name: x\n            addToTree(newChild, path, value)\n            tree.children.push newChild\n\n        for rowKey in pivotData.getRowKeys()\n            value = pivotData.getAggregator(rowKey, []).value()\n            if value?\n                addToTree(tree, rowKey, value)\n\n        color = d3.scale.category10()\n        width = opts.d3.width()\n        height = opts.d3.height()\n\n        treemap = d3.layout.treemap()\n            .size([width, height])\n            .sticky(true)\n            .value( (d) -> d.size )\n\n        d3.select(result[0])\n            .append(\"div\")\n                .style(\"position\", \"relative\")\n                .style(\"width\", width + \"px\")\n                .style(\"height\", height + \"px\")\n            .datum(tree).selectAll(\".node\")\n                .data(treemap.padding([15,0,0,0]).value( (d) -> d.value ).nodes)\n            .enter().append(\"div\")\n            .attr(\"class\", \"node\")\n            .style(\"background\", (d) -> if d.children? then \"lightgrey\" else color(d.name) )\n            .text( (d) -> d.name )\n            .call ->\n                    this.style(\"left\",  (d) -> d.x+\"px\" )\n                        .style(\"top\",   (d) -> d.y+\"px\" )\n                        .style(\"width\", (d) -> Math.max(0, d.dx - 1)+\"px\" )\n                        .style(\"height\",(d) -> Math.max(0, d.dy - 1)+\"px\" )\n                    return\n\n        return result\n\n\n\n"]}