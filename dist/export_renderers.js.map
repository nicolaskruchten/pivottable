{"version":3,"sources":["export_renderers.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAA,cAAA,GAAiB,SAAC,WAAD;IACb,IAAG,OAAO,OAAP,KAAkB,QAAlB,IAA+B,OAAO,MAAP,KAAiB,QAAnD;aACI,WAAA,CAAY,OAAA,CAAQ,QAAR,CAAZ,EADJ;KAAA,MAEK,IAAG,OAAO,MAAP,KAAiB,UAAjB,IAAgC,MAAM,CAAC,GAA1C;aACD,MAAA,CAAO,CAAC,QAAD,CAAP,EAAmB,WAAnB,EADC;KAAA,MAAA;aAID,WAAA,CAAY,MAAZ,EAJC;;EAHQ;;EASjB,cAAA,CAAe,SAAC,CAAD;WAEX,CAAC,CAAC,cAAc,CAAC,gBAAjB,GAAoC;MAAA,YAAA,EAAc,SAAC,SAAD,EAAY,IAAZ;AAC9C,YAAA;QAAA,QAAA,GACI;UAAA,aAAA,EAAe,EAAf;;QAEJ,IAAA,GAAO,CAAC,CAAC,MAAF,CAAS,QAAT,EAAmB,IAAnB;QAEP,OAAA,GAAU,SAAS,CAAC,UAAV,CAAA;QACV,IAAmB,OAAO,CAAC,MAAR,KAAkB,CAArC;UAAA,OAAO,CAAC,IAAR,CAAa,EAAb,EAAA;;QACA,OAAA,GAAU,SAAS,CAAC,UAAV,CAAA;QACV,IAAmB,OAAO,CAAC,MAAR,KAAkB,CAArC;UAAA,OAAO,CAAC,IAAR,CAAa,EAAb,EAAA;;QACA,QAAA,GAAW,SAAS,CAAC;QACrB,QAAA,GAAW,SAAS,CAAC;QAErB,MAAA,GAAS;QAET,GAAA,GAAM;AACN,aAAA,0CAAA;;UACI,GAAG,CAAC,IAAJ,CAAS,OAAT;AADJ;QAEA,IAAG,OAAO,CAAC,MAAR,KAAkB,CAAlB,IAAwB,OAAQ,CAAA,CAAA,CAAE,CAAC,MAAX,KAAqB,CAAhD;UACI,GAAG,CAAC,IAAJ,CAAS,SAAS,CAAC,cAAnB,EADJ;SAAA,MAAA;AAGI,eAAA,2CAAA;;YACI,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAT;AADJ,WAHJ;;QAMA,MAAM,CAAC,IAAP,CAAY,GAAZ;AAEA,aAAA,2CAAA;;UACI,GAAA,GAAM;AACN,eAAA,0CAAA;;YACI,GAAG,CAAC,IAAJ,CAAS,CAAT;AADJ;AAGA,eAAA,2CAAA;;YACI,GAAA,GAAM,SAAS,CAAC,aAAV,CAAwB,MAAxB,EAAgC,MAAhC;YACN,IAAG,mBAAH;cACI,GAAG,CAAC,IAAJ,CAAS,GAAG,CAAC,KAAJ,CAAA,CAAT,EADJ;aAAA,MAAA;cAGI,GAAG,CAAC,IAAJ,CAAS,EAAT,EAHJ;;AAFJ;UAMA,MAAM,CAAC,IAAP,CAAY,GAAZ;AAXJ;QAYA,IAAA,GAAO;AACP,aAAA,0CAAA;;UACI,IAAA,IAAQ,CAAC,CAAC,IAAF,CAAO,IAAP,CAAA,GAAa;AADzB;AAGA,eAAO,CAAA,CAAE,YAAF,CAAe,CAAC,IAAhB,CAAqB,IAArB,CAA0B,CAAC,GAA3B,CACC;UAAA,KAAA,EAAO,CAAC,CAAA,CAAE,MAAF,CAAS,CAAC,KAAV,CAAA,CAAA,GAAoB,CAArB,CAAA,GAA0B,IAAjC;UACA,MAAA,EAAQ,CAAC,CAAA,CAAE,MAAF,CAAS,CAAC,MAAV,CAAA,CAAA,GAAqB,CAAtB,CAAA,GAA2B,IADnC;SADD;MA1CuC,CAAd;;EAFzB,CAAf;AATA","file":"export_renderers.js","sourceRoot":"/source/","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n        \r\ncallWithJQuery ($) ->\r\n\r\n    $.pivotUtilities.export_renderers = \"TSV Export\": (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings: {}\r\n\r\n        opts = $.extend defaults, opts\r\n\r\n        rowKeys = pivotData.getRowKeys()\r\n        rowKeys.push [] if rowKeys.length == 0\r\n        colKeys = pivotData.getColKeys()\r\n        colKeys.push [] if colKeys.length == 0\r\n        rowAttrs = pivotData.rowAttrs\r\n        colAttrs = pivotData.colAttrs\r\n\r\n        result = []\r\n\r\n        row = []\r\n        for rowAttr in rowAttrs\r\n            row.push rowAttr\r\n        if colKeys.length == 1 and colKeys[0].length == 0\r\n            row.push pivotData.aggregatorName\r\n        else\r\n            for colKey in colKeys\r\n                row.push colKey.join(\"-\")\r\n\r\n        result.push row\r\n\r\n        for rowKey in rowKeys\r\n            row = []\r\n            for r in rowKey\r\n                row.push r\r\n\r\n            for colKey in colKeys\r\n                agg = pivotData.getAggregator(rowKey, colKey)\r\n                if agg.value()?\r\n                    row.push agg.value()\r\n                else\r\n                    row.push \"\"\r\n            result.push row\r\n        text = \"\"\r\n        for r in result\r\n            text += r.join(\"\\t\")+\"\\n\"\r\n        \r\n        return $(\"<textarea>\").text(text).css(\r\n                width: ($(window).width() / 2) + \"px\", \r\n                height: ($(window).height() / 2) + \"px\")\r\n    \r\n"]}