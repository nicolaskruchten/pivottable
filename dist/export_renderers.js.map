{"version":3,"file":"export_renderers.js","sources":["export_renderers.coffee"],"names":[],"mappings":"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","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n\ncallWithJQuery ($) ->\n\n    svExporter = (pivotData, opts, separator) ->\n        defaults = localeStrings: {\n            csv_sep: \",\"\n        }\n\n        opts = $.extend(true, {}, defaults, opts)\n\n        if separator == \"tsv\"\n            separator = \"\\t\"\n        else\n            separator = opts.localeStrings.csv_sep\n\n        rowKeys = pivotData.getRowKeys()\n        rowKeys.push [] if rowKeys.length == 0\n        colKeys = pivotData.getColKeys()\n        colKeys.push [] if colKeys.length == 0\n        rowAttrs = pivotData.rowAttrs\n        colAttrs = pivotData.colAttrs\n\n        result = []\n\n        row = []\n        for rowAttr in rowAttrs\n            row.push rowAttr\n        if colKeys.length == 1 and colKeys[0].length == 0\n            row.push pivotData.aggregatorName\n        else\n            for colKey in colKeys\n                row.push colKey.join(\"-\")\n\n        result.push row\n\n        for rowKey in rowKeys\n            row = []\n            for r in rowKey\n                row.push r\n\n            for colKey in colKeys\n                agg = pivotData.getAggregator(rowKey, colKey)\n                if agg.value()?\n                    row.push agg.value()\n                else\n                    row.push \"\"\n            result.push row\n        text = \"\"\n        for r in result\n            text += r.join(separator)+\"\\n\"\n\n        return $(\"<textarea>\").text(text).css(\n                width: ($(window).width() / 2) + \"px\",\n                height: ($(window).height() / 2) + \"px\")\n\n    $.pivotUtilities.export_renderers = \n        \"TSV Export\": (pivotData, opts) -> svExporter(pivotData, opts, \"tsv\"),\n        \"CSV Export\": (pivotData, opts) -> svExporter(pivotData, opts, \"csv\")\n"]}