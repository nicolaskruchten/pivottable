{"version":3,"file":"hot_renderers.js","sources":["hot_renderers.coffee"],"names":[],"mappings":"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","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n\ncallWithJQuery ($) ->\n    hasProp = {}.hasOwnProperty\n    colLimit = 99\n    rowLimit = 99\n    rowStart = 0\n    colStart = 0\n    colEnd = colStart + colLimit\n    rowEnd = rowStart + rowLimit\n    scrollDown = false\n    grandTotalFlag = false\n    colTotalFlag = false\n    rowTotalFlag = false\n\n    isOverlap = (arr, i, j) ->\n        if j == 0\n            return -1\n        if arr[j][i-1] == arr[j-1][i-1] && arr[j][i] == arr[j-1][i]\n            return 1\n        return -1 \n    \n\n    scrollColrender = (pivotData, opts) ->\n        return () ->\n            scrollWidth = this.scrollWidth;\n            scrollPositionX = this.scrollLeft + this.offsetWidth\n            colAttrs = pivotData.colAttrs\n            rowKeys = pivotData.getRowKeys()\n            result = document.getElementsByClassName('pvtTable').item(0)\n            createPivotChild = elementAppend(pivotData, opts)\n\n            if !rowTotalFlag && (((scrollPositionX - scrollWidth) < 0) || (scrollPositionX - scrollWidth) == 1)\n                colStart = colEnd\n                colEnd = colStart + colLimit\n                theadChildNodes = result.getElementsByTagName('thead').item(0).childNodes\n                theadChildNodes.forEach(node, i) ->\n                    for own j, colAttr of colAttrs\n                        if parseInt(i) == parseInt(j)\n                            createPivotChild('thead-th', rowStart, rowEnd, colStart, colEnd, parseInt(j), node)\n                        \n                    \n                tbodyChildNodes = result.getElementsByTagName('tbody').item(0).childNodes\n                tbodyChildNodes.forEach(node, i) ->\n                    for j in [0..rowEnd]\n                        if parseInt(i) == parseInt(j) \n                            if i >= rowKeys.length\n                                createPivotChild('col-total-td', rowStart, rowEnd, colStart, colEnd, null, node)\n                            else \n                                createPivotChild('tbody-td', rowStart, rowEnd, colStart, colEnd, parseInt(j), node)\n                if opts.type == 'Heatmap'\n                    $(result).heatmap(\"heatmap\", opts)\n\n    scrollRowrender = (pivotData, opts) ->\n        return () ->\n            scrollHeight = $(document).height()\n            scrollPositionY = $(window).height() + $(window).scrollTop()\n            if (scrollHeight - scrollPositionY) / scrollHeight == 0\n                rowKeys = pivotData.getRowKeys()\n                result = document.getElementsByClassName('pvtTable').item(0)\n                tbody = result.getElementsByTagName('tbody').item(0)\n                createPivotChild = elementAppend(pivotData, opts)\n                if !colTotalFlag\n                    rowStart = rowEnd\n                    rowEnd = rowStart + rowLimit\n                    for own i, rowKey of rowKeys.slice(rowStart, rowEnd)\n                        tr = document.createElement(\"tr\")\n                        createPivotChild('tbody-th', rowStart, rowEnd, colStart, colEnd, parseInt(i), tr)\n                        createPivotChild('tbody-td', rowStart, rowEnd, colStart, colEnd, parseInt(i), tr)\n                        tbody.appendChild(tr)\n                    createPivotChild('col-total-th', rowStart, rowEnd, colStart, colEnd, null, tbody)\n                    if opts.type == 'Heatmap'\n                        $(result).heatmap(\"heatmap\", opts)\n\n\n    keydownendEvent = (e, pivotData, opts) ->\n        if e.code == 'PageDown'\n            scrollRowrender(pivotData, opts)\n        if e.code == 'end'\n            scrollRowrender(pivotData, opts)\n        if e.ecode == 'ArrowDown'\n            scrollRowrender(pivotData, opts)        \n\n    \n    ###\n    Scroll Event Class\n    ###\n    \n    class ScrollEvent\n        constructor: (pivotData, opts = {}) ->\n            @fn = \n                rowrender: scrollRowrender(pivotData, opts)\n                colrender: scrollColrender(pivotData, opts)\n                keydownend: (event) ->\n                    return keydownendEvent(event, pivotData, opts)\n\n            @getKeydownendEvent = () ->\n                return @fn.keydownend\n            \n            @getRowrenderEvent = () ->\n                return @fn.rowrender\n        \n            @getColRenderEvent = () =>\n                return @fn.colrender\n        addRenderEvent: () =>\n            window.addEventListener('scroll', @getRowrenderEvent())\n            window.addEventListener('keydown', @getKeydownendEvent())\n            document.getElementById('output').addEventListener('scroll', @getColRenderEvent())\n        removeRenderEvent: () =>\n            window.removeEventListener('scroll', @getRowRenderEvent())\n            window.removeEventListener('keydown', @getKeydownendEvent())\n            document.getElementById('output').removeEventListener('scroll', @getColRenderEvent())\n\n\n    elementAppend = (pivotData, opts) ->\n        colAttrs = pivotData.colAttrs\n        rowAttrs = pivotData.rowAttrs\n        rowKeys = pivotData.getRowKeys()\n        colKeys = pivotData.getColKeys()\n        getClickHandler = makeClickHandler(opts)\n        return (element, rowStart, rowEnd, colStart, colEnd, i, target) ->\n            fn = \n                'thead-th': () ->\n                    for own j, colKey  of colKeys.slice(colStart, colEnd)\n                        x = isOverlap(colKeys, parseInt(i), parseInt(j))\n                        th = document.createElement(\"th\")\n                        th.className = \"pvtColLabel\"\n                        if x == -1\n                            th.textContent = colKey[i]\n                            th.setAttribute('style', 'border-right:none;')\n                        else\n                            th.setAttribute('style', 'border-left:none;border-right:none;')\n                        \n                        if (parseInt(i) == colAttrs.length-1 && rowAttrs.length != 0)\n                            th.setAttribute(\"rowspan\", 2)\n                        target.appendChild th\n\n                        if (parseInt(j) == colKeys.length-1 && !rowTotalFlag)\n                            if parseInt(i) == 0 && opts.table.rowTotals\n                                th = document.createElement(\"th\")\n                                th.className = \"pvtTotalLabel pvtRowTotalLabel\"\n                                th.innerHTML = opts.localeStrings.totals\n                                th.setAttribute(\"rowspan\", colAttrs.length + (if rowAttrs.length == 0 then 0 else 1))\n                                target.appendChild th\n                    return target\n                'thead-th-total': () ->\n                    # pvtAxisLabel\n                    if rowAttrs.length != 0\n                        tr = document.createElement(\"tr\")\n                        for own i, r of rowAttrs\n                            # r = rowAttrs[i]\n                            th = document.createElement(\"th\")\n                            th.className = \"pvtAxisLabel\"\n                            th.textContent = r\n                            tr.appendChild th\n                        th = document.createElement(\"th\")\n                        if colAttrs.length == 0\n                            # th.setAttribute(\"rowspan\", 2)\n                            th.className = \"pvtTotalLabel pvtRowTotalLabel\"\n                            th.innerHTML = opts.localeStrings.totals\n                        tr.appendChild th\n                        target.appendChild tr\n                    return target\n                'tbody-th':  () ->\n                    rowKey = rowKeys[i]\n                    # tbody tr th\n                    for own j, txt of rowKey\n                        th = document.createElement(\"th\")\n                        th.className = \"pvtRowLabel\"\n                        x = isOverlap(rowKeys, parseInt(j), parseInt(i))\n                        if x == -1\n                            th.textContent = txt\n                            th.setAttribute('style', 'border-bottom:none;')\n                        else\n                            th.setAttribute('style', 'border-bottom:none;border-top:none;')\n                        if parseInt(j) == rowAttrs.length-1 && colAttrs.length != 0\n                            th.setAttribute(\"colspan\", 2)\n                        target.appendChild th\n                    return target\n                'tbody-td': () -> \n                    # tbody tr td\n                    rowKey = rowKeys[i]\n                    for own j, colKey  of colKeys.slice(colStart, colEnd)\n                        colKey = colKeys[j]\n                        aggregator = pivotData.getAggregator(rowKey, colKey)\n                        val = aggregator.value()\n                        td = document.createElement(\"td\")\n                        td.className = \"pvtVal row\" + i + \" col\" + j\n                        td.textContent = aggregator.format(val)\n                        td.setAttribute(\"data-value\", val)\n                        if getClickHandler?\n                            td.onclick = getClickHandler(val, rowKey, colKey)\n                        target.appendChild td\n                    this['row-total-td']()\n                    return target\n                'row-total-td': () ->\n                    # col Total\n                    rowKey = rowKeys[i]\n                    if colEnd >= colKeys.length\n                        if (opts.table.rowTotals || colAttrs.length == 0)\n                            rowTotalFlag = true\n                            totalAggregator = pivotData.getAggregator(rowKey, [])\n                            val = totalAggregator.value()\n                            td = document.createElement(\"td\")\n                            td.className = \"pvtTotal rowTotal\"\n                            td.textContent = totalAggregator.format(val)\n                            td.setAttribute(\"data-value\", val)\n                            if getClickHandler?\n                                td.onclick = getClickHandler(val, rowKey, [])\n                            td.setAttribute(\"data-for\", \"row\" + i)\n                            target.appendChild td\n                    return target\n                'col-total-th': (tr) ->\n                    tr = tr || document.createElement(\"tr\")\n                    if rowEnd > rowKeys.length && !colTotalFlag\n                        if opts.table.colTotals || rowAttrs.length == 0\n                            colTotalFlag = true\n                            th = document.createElement(\"th\")\n                            th.className = \"pvtTotalLabel pvtColTotalLabel\"\n                            th.innerHTML = opts.localeStrings.totals\n                            th.setAttribute(\"colspan\", rowAttrs.length + (if colAttrs.length == 0 then 0 else 1))\n                            tr.appendChild th\n                            this['col-total-td'](tr)\n                            target.appendChild tr\n                    return target\n                'col-total-td': (tr) ->\n                    tr = tr || target\n                    if colAttrs.length == 0 \n                        this['grand-total-td'](tr)\n                    for j in [colStart..colEnd]\n                        if hasProp.call(colKeys, j)\n                            colKey = colKeys[j]\n                            totalAggregator = pivotData.getAggregator([], colKey)\n                            val = totalAggregator.value()\n                            td = document.createElement(\"td\")\n                            td.className = \"pvtTotal colTotal\"\n                            td.textContent = totalAggregator.format(val)\n                            td.setAttribute(\"data-value\", val)\n                            if getClickHandler?\n                                td.onclick = getClickHandler(val, [], colKey)\n                            td.setAttribute(\"data-for\", \"col\" + j)\n                            tr.appendChild td\n                            if colKeys.length - 1 == j\n                                this['grand-total-td'](tr)\n                    return tr\n                'grand-total-td': (tr) ->\n                    if ((opts.table.rowTotals || colAttrs.length == 0) || !grandTotalFlag)\n                        grandTotalFlag = true\n                        totalAggregator = pivotData.getAggregator([], [])\n                        val = totalAggregator.value()\n                        td = document.createElement(\"td\")\n                        td.className = \"pvtGrandTotal\"\n                        td.textContent = totalAggregator.format(val)\n                        td.setAttribute(\"data-value\", val)\n                        if getClickHandler?\n                            td.onclick = getClickHandler(val, [], [])\n                        tr.appendChild td\n                    return tr\n            return fn[element]()\n\n\n    makeClickHandler = (opts) ->\n        if opts.table.clickCallback\n            getClickHandler = (value, rowValues, colValues) ->\n                filters = {}\n                for own i, attr of colAttrs\n                    if colValues[i]?\n                        filters[attr] = colValues[i]\n                for own j , attr of rowAttrs\n                    if rowValues[j]?\n                        filters[attr] = rowValues[j]\n                return (e) ->\n                    return opts.table.clickCallback(e, value, filters, pivotData)\n        return getClickHandler\n\n    getExtendedOpts = (opts, type) ->\n        defaults =\n            table:\n                clickCallback: null\n                rowTotals: true\n                colTotals: true\n            localeStrings: \n                totals: \"Totals\"\n            type: type\n        return $.extend(true, {}, defaults, opts)\n\n\n    pivotTableRenderer = (pivotData, opts) ->\n        colAttrs = pivotData.colAttrs\n        rowAttrs = pivotData.rowAttrs    \n        rowKeys = pivotData.getRowKeys()\n        colKeys = pivotData.getColKeys()\n        rowLimit = if pivotData.getRowLimit() > 0 then pivotData.getRowLimit() else rowKeys.length\n        colLimit = if pivotData.getColLimit() > 0 then pivotData.getColLimit() else colKeys.length\n        rowStart = 0\n        colStart = 0\n        colEnd = colStart + colLimit\n        rowEnd = rowStart + rowLimit\n        grandTotalFlag = false\n        colTotalFlag = false\n        rowTotalFlag = false\n        result = document.createElement(\"table\")\n        result.className = \"pvtTable\"\n        result.setAttribute(\"data-numrows\", colEnd)\n        result.setAttribute(\"data-numcols\", rowEnd)\n        createPivotChild = elementAppend(pivotData, opts)\n        scrollevent = new ScrollEvent(pivotData, opts)\n        scrollevent.addRenderEvent()\n\n        # thead\n        thead = document.createElement(\"thead\")\n        for own j, c of colAttrs\n            tr = document.createElement(\"tr\")\n            if (parseInt(j) == 0 && rowAttrs.length != 0)\n                th = document.createElement(\"th\")\n                th.setAttribute(\"colspan\", rowAttrs.length)\n                th.setAttribute(\"rowspan\", colAttrs.length)\n                tr.appendChild(th)\n            th = document.createElement(\"th\")\n            th.className = \"pvtAxisLabel\"\n            th.textContent = c\n            tr.appendChild th\n            createPivotChild('thead-th', rowStart, rowEnd, colStart, colEnd, parseInt(j), tr)\n            thead.appendChild tr\n\n        createPivotChild('thead-th-total', rowStart, rowEnd, colStart, colEnd, null, thead)\n        result.appendChild thead\n\n        # tbody\n        tbody = document.createElement(\"tbody\")\n        for own i, rowKey of rowKeys.slice(rowStart, rowEnd)\n            tr = document.createElement(\"tr\")\n            createPivotChild('tbody-th', rowStart, rowEnd, colStart, colEnd, parseInt(i), tr)\n            createPivotChild('tbody-td', rowStart, rowEnd, colStart, colEnd, parseInt(i), tr)\n            tbody.appendChild tr\n        createPivotChild('col-total-th', rowStart, rowEnd, colStart, colEnd, null, tbody)\n        result.appendChild tbody\n\n        return result\n\n    $.pivotUtilities.hot_renderes =\n        renderer:\n            'Table': (data, opts) ->\n                extendedOpts = getExtendedOpts(opts, 'Table')\n                return pivotTableRenderer(data, extendedOpts)\n            'Heatmap': (data, opts) ->\n                extendedOpts = getExtendedOpts(opts, 'Heatmap')\n                return $(pivotTableRenderer(data, extendedOpts)).heatmap(\"heatmap\", extendedOpts)\n        removeScrollevent: () ->\n            if scrollevent\n                return scrollevent.removeRenderEvent()\n"]}